-- 1. RECIPE_CATEGORY1_TB 테이블 생성
CREATE TABLE RECIPE_CATEGORY1_TB (
    CATEGORY1_CD NUMBER PRIMARY KEY,  -- 1차 카테고리 코드 (기본 키)
    CATEGORY1_NAME VARCHAR2(255) NOT NULL  -- 1차 카테고리 이름
);

-- 2. RECIPE_CATEGORY2_TB 테이블 생성
CREATE TABLE RECIPE_CATEGORY2_TB (
    CATEGORY2_CD NUMBER PRIMARY KEY,  -- 2차 카테고리 코드 (기본 키)
    CATEGORY2_NAME VARCHAR2(255) NOT NULL,  -- 2차 카테고리 이름
    CATEGORY1_CD NUMBER,  -- 1차 카테고리 코드 (외래 키)
    CONSTRAINT FK_CATEGORY2_CATEGORY1 FOREIGN KEY (CATEGORY1_CD) REFERENCES RECIPE_CATEGORY1_TB (CATEGORY1_CD)  -- 외래 키 제약 조건
);

-- 3. RECIPE_TB 테이블 생성
CREATE TABLE RECIPE_TB (
    RECIPE_CD NUMBER PRIMARY KEY,  -- 레시피 코드 (기본 키)
    USER_NO NUMBER NULL,  -- 사용자 번호 (NULL 허용)
    RECIPE_NM VARCHAR2(255) NOT NULL,  -- 레시피 이름
    RECIPE_DESCRIPTION VARCHAR2(255),  -- 레시피 설명
    ESTIMATED_TIME NUMBER,  -- 예상 소요 시간
    COOKING_SERVINGS NUMBER,  -- 조리 인원
    RECIPE_MAIN_IMAGE VARCHAR2(255),  -- 메인 이미지 경로
    CATEGORY1_CD NUMBER,  -- 1차 카테고리 코드
    CATEGORY2_CD NUMBER,  -- 2차 카테고리 코드
    CREATED_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- 생성 일시
    UPDATED_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- 수정 일시
    CONSTRAINT FK_RECIPE_CATEGORY1 FOREIGN KEY (CATEGORY1_CD) REFERENCES RECIPE_CATEGORY1_TB (CATEGORY1_CD),  -- 1차 카테고리 외래 키
    CONSTRAINT FK_RECIPE_CATEGORY2 FOREIGN KEY (CATEGORY2_CD) REFERENCES RECIPE_CATEGORY2_TB (CATEGORY2_CD)  -- 2차 카테고리 외래 키
);

-- 4. RECIPE_INGREDIENT_TB 테이블 생성
CREATE TABLE RECIPE_INGREDIENT_TB (
    INGREDIENT_CD NUMBER PRIMARY KEY,  -- 재료 코드 (기본 키)
    INGREDIENT_NM VARCHAR2(255) NOT NULL  -- 재료 이름
);

-- 5. RECIPE_INGREDIENT_TYPE_TB 테이블 생성
CREATE TABLE RECIPE_INGREDIENT_TYPE_TB (
    TYPE_CD NUMBER PRIMARY KEY,  -- 재료 유형 코드 (기본 키)
    RECIPE_CD NUMBER,  -- 레시피 코드
    INGREDIENT_CD NUMBER,  -- 재료 코드
    INGREDIENT_AMT VARCHAR2(255),  -- 재료 양
    INGREDIENT_TYPE VARCHAR2(255),  -- 재료 유형 (예: 주재료, 부재료)
    CONSTRAINT FK_RECIPE_INGREDIENT_RECIPE FOREIGN KEY (RECIPE_CD) REFERENCES RECIPE_TB (RECIPE_CD),  -- 레시피 테이블 외래 키
    CONSTRAINT FK_RECIPE_INGREDIENT FOREIGN KEY (INGREDIENT_CD) REFERENCES RECIPE_INGREDIENT_TB (INGREDIENT_CD)  -- 재료 테이블 외래 키
);

-- 6. RECIPE_STEP_TB 테이블 생성
CREATE TABLE RECIPE_STEP_TB (
    STEP_CD NUMBER PRIMARY KEY,  -- 조리 단계 코드 (기본 키)
    RECIPE_CD NUMBER,  -- 레시피 코드
    STEP_ORD NUMBER NOT NULL,  -- 조리 순서
    INSTRUCTION VARCHAR2(255),  -- 조리 설명
    IMAGE_URL VARCHAR2(255),  -- 조리 이미지 경로
    CONSTRAINT FK_RECIPE_STEP_RECIPE FOREIGN KEY (RECIPE_CD) REFERENCES RECIPE_TB (RECIPE_CD)  -- 레시피 테이블 외래 키
);

-- 7. TIP_TB 테이블 생성
CREATE TABLE TIP_TB (
    TIP_CD NUMBER PRIMARY KEY,  -- 팁 코드 (기본 키)
    RECIPE_CD NUMBER,  -- 레시피 코드
    TIP_CONTENT VARCHAR2(255),  -- 팁 내용
    TIP_ORD NUMBER,  -- 팁 순서
    CONSTRAINT FK_TIP_RECIPE FOREIGN KEY (RECIPE_CD) REFERENCES RECIPE_TB (RECIPE_CD)  -- 레시피 테이블 외래 키
);

-- 커밋 명령어로 변경 사항 반영
COMMIT;
DESC RECIPE_CATEGORY2_TB;
-- 외래 키 제약 조건 삭제
ALTER TABLE RECIPE_TB DROP CONSTRAINT FK_RECIPE_CATEGORY1;
ALTER TABLE RECIPE_TB DROP CONSTRAINT FK_RECIPE_CATEGORY2;
ALTER TABLE RECIPE_INGREDIENT_TYPE_TB DROP CONSTRAINT FK_RECIPE_INGREDIENT_RECIPE;
ALTER TABLE RECIPE_INGREDIENT_TYPE_TB DROP CONSTRAINT FK_RECIPE_INGREDIENT;
ALTER TABLE RECIPE_STEP_TB DROP CONSTRAINT FK_RECIPE_STEP_RECIPE;
ALTER TABLE TIP_TB DROP CONSTRAINT FK_TIP_RECIPE;

-- 테이블 삭제 (존재할 경우만)
DROP TABLE RECIPE_CATEGORY1_TB CASCADE CONSTRAINTS;
DROP TABLE RECIPE_CATEGORY2_TB CASCADE CONSTRAINTS;
DROP TABLE RECIPE_TB CASCADE CONSTRAINTS;
DROP TABLE RECIPE_INGREDIENT_TB CASCADE CONSTRAINTS;
DROP TABLE RECIPE_INGREDIENT_TYPE_TB CASCADE CONSTRAINTS;
DROP TABLE RECIPE_STEP_TB CASCADE CONSTRAINTS;
DROP TABLE TIP_TB CASCADE CONSTRAINTS;

-- 커밋 적용
COMMIT;

-- 1. RECIPE_CATEGORY2_TB 테이블의 외래 키 삭제
ALTER TABLE RECIPE_CATEGORY2_TB DROP CONSTRAINT FK_CATEGORY2_CATEGORY1;


-- 2. RECIPE_CATEGORY2_TB 테이블의 CATEGORY1_CD 컬럼 제거
ALTER TABLE RECIPE_CATEGORY2_TB DROP COLUMN CATEGORY1_CD;

-- 1. 1차 카테고리 테이블 데이터 삽입
INSERT INTO RECIPE_CATEGORY1_TB (CATEGORY1_CD, CATEGORY1_NAME) VALUES (101, '한식');
INSERT INTO RECIPE_CATEGORY1_TB (CATEGORY1_CD, CATEGORY1_NAME) VALUES (102, '양식');
INSERT INTO RECIPE_CATEGORY1_TB (CATEGORY1_CD, CATEGORY1_NAME) VALUES (103, '중식');
INSERT INTO RECIPE_CATEGORY1_TB (CATEGORY1_CD, CATEGORY1_NAME) VALUES (104, '일식');
INSERT INTO RECIPE_CATEGORY1_TB (CATEGORY1_CD, CATEGORY1_NAME) VALUES (105, '디저트');

-- 2. 2차 카테고리 테이블 데이터 삽입 (독립적으로 관리)
INSERT INTO RECIPE_CATEGORY2_TB (CATEGORY2_CD, CATEGORY2_NAME) VALUES (201, '찌개류');
INSERT INTO RECIPE_CATEGORY2_TB (CATEGORY2_CD, CATEGORY2_NAME) VALUES (202, '볶음류');
INSERT INTO RECIPE_CATEGORY2_TB (CATEGORY2_CD, CATEGORY2_NAME) VALUES (203, '구이류');
INSERT INTO RECIPE_CATEGORY2_TB (CATEGORY2_CD, CATEGORY2_NAME) VALUES (204, '국류');
INSERT INTO RECIPE_CATEGORY2_TB (CATEGORY2_CD, CATEGORY2_NAME) VALUES (205, '찜류');
INSERT INTO RECIPE_CATEGORY2_TB (CATEGORY2_CD, CATEGORY2_NAME) VALUES (206, '파스타');
INSERT INTO RECIPE_CATEGORY2_TB (CATEGORY2_CD, CATEGORY2_NAME) VALUES (207, '스테이크');
INSERT INTO RECIPE_CATEGORY2_TB (CATEGORY2_CD, CATEGORY2_NAME) VALUES (208, '샐러드');
INSERT INTO RECIPE_CATEGORY2_TB (CATEGORY2_CD, CATEGORY2_NAME) VALUES (209, '수프');
INSERT INTO RECIPE_CATEGORY2_TB (CATEGORY2_CD, CATEGORY2_NAME) VALUES (210, '디저트');

-- 3. 기본 재료 테이블 데이터 삽입
INSERT INTO RECIPE_INGREDIENT_TB (INGREDIENT_CD, INGREDIENT_NM) VALUES (301, '돼지고기');
INSERT INTO RECIPE_INGREDIENT_TB (INGREDIENT_CD, INGREDIENT_NM) VALUES (302, '양파');
INSERT INTO RECIPE_INGREDIENT_TB (INGREDIENT_CD, INGREDIENT_NM) VALUES (303, '마늘');
INSERT INTO RECIPE_INGREDIENT_TB (INGREDIENT_CD, INGREDIENT_NM) VALUES (304, '고추장');
INSERT INTO RECIPE_INGREDIENT_TB (INGREDIENT_CD, INGREDIENT_NM) VALUES (305, '된장');

-- 4. 레시피 테이블 데이터 삽입
INSERT INTO RECIPE_TB (
    RECIPE_CD, USER_NO, RECIPE_NM, RECIPE_DESCRIPTION, ESTIMATED_TIME, COOKING_SERVINGS, RECIPE_MAIN_IMAGE, CATEGORY1_CD, CATEGORY2_CD, CREATED_DT, UPDATED_DT
) VALUES (
    1, NULL, '김치찌개', '김치와 돼지고기를 넣고 끓인 한국 전통 찌개 요리.', 30, 4, '/images/recipe/kimchi_jjigae.jpg', 101, 201, SYSDATE, SYSDATE
);

INSERT INTO RECIPE_TB (
    RECIPE_CD, USER_NO, RECIPE_NM, RECIPE_DESCRIPTION, ESTIMATED_TIME, COOKING_SERVINGS, RECIPE_MAIN_IMAGE, CATEGORY1_CD, CATEGORY2_CD, CREATED_DT, UPDATED_DT
) VALUES (
    2, NULL, '돼지불고기', '양념된 돼지고기를 구워 먹는 전통 한식.', 25, 3, '/images/recipe/bulgogi.jpg', 101, 202, SYSDATE, SYSDATE
);

INSERT INTO RECIPE_TB (
    RECIPE_CD, USER_NO, RECIPE_NM, RECIPE_DESCRIPTION, ESTIMATED_TIME, COOKING_SERVINGS, RECIPE_MAIN_IMAGE, CATEGORY1_CD, CATEGORY2_CD, CREATED_DT, UPDATED_DT
) VALUES (
    3, NULL, '파스타', '신선한 토마토 소스를 사용한 스파게티 요리.', 20, 2, '/images/recipe/spaghetti.jpg', 102, 206, SYSDATE, SYSDATE
);

-- 5. 재료 유형 테이블 데이터 삽입
INSERT INTO RECIPE_INGREDIENT_TYPE_TB (
    TYPE_CD, RECIPE_CD, INGREDIENT_CD, INGREDIENT_AMT, INGREDIENT_TYPE
) VALUES (
    1, 1, 301, '200g', '주재료'  -- 김치찌개의 주재료 돼지고기
);

INSERT INTO RECIPE_INGREDIENT_TYPE_TB (
    TYPE_CD, RECIPE_CD, INGREDIENT_CD, INGREDIENT_AMT, INGREDIENT_TYPE
) VALUES (
    2, 1, 302, '1개', '부재료'  -- 김치찌개의 부재료 양파
);

INSERT INTO RECIPE_INGREDIENT_TYPE_TB (
    TYPE_CD, RECIPE_CD, INGREDIENT_CD, INGREDIENT_AMT, INGREDIENT_TYPE
) VALUES (
    3, 2, 301, '300g', '주재료'  -- 돼지불고기의 주재료 돼지고기
);

-- 6. 조리 단계 테이블 데이터 삽입
INSERT INTO RECIPE_STEP_TB (
    STEP_CD, RECIPE_CD, STEP_ORD, INSTRUCTION, IMAGE_URL
) VALUES (
    1, 1, 1, '김치와 돼지고기를 냄비에 넣고 볶습니다.', '/images/recipe/kimchi_jjigae_step1.jpg'
);

INSERT INTO RECIPE_STEP_TB (
    STEP_CD, RECIPE_CD, STEP_ORD, INSTRUCTION, IMAGE_URL
) VALUES (
    2, 1, 2, '물을 넣고 30분간 끓입니다.', '/images/recipe/kimchi_jjigae_step2.jpg'
);

INSERT INTO RECIPE_STEP_TB (
    STEP_CD, RECIPE_CD, STEP_ORD, INSTRUCTION, IMAGE_URL
) VALUES (
    3, 2, 1, '양념에 돼지고기를 30분간 재웁니다.', '/images/recipe/bulgogi_step1.jpg'
);

-- 7. 팁 테이블 데이터 삽입
INSERT INTO TIP_TB (
    TIP_CD, RECIPE_CD, TIP_CONTENT, TIP_ORD
) VALUES (
    1, 1, '돼지고기를 먼저 볶아야 더 깊은 맛이 납니다.', 1
);

INSERT INTO TIP_TB (
    TIP_CD, RECIPE_CD, TIP_CONTENT, TIP_ORD
) VALUES (
    2, 2, '고기를 오래 재울수록 풍미가 더 깊어집니다.', 1
);

COMMIT;
SELECT 
    R.RECIPE_CD,  -- 레시피 코드
    R.RECIPE_NM,  -- 레시피 이름
    R.RECIPE_DESCRIPTION,  -- 레시피 설명
    R.ESTIMATED_TIME,  -- 예상 조리 시간
    R.COOKING_SERVINGS,  -- 조리 인원
    R.RECIPE_MAIN_IMAGE,  -- 레시피 메인 이미지 경로
    C1.CATEGORY1_NAME AS CATEGORY1,  -- 1차 카테고리 이름
    C2.CATEGORY2_NAME AS CATEGORY2,  -- 2차 카테고리 이름
    I.INGREDIENT_NM,  -- 재료 이름
    IT.INGREDIENT_AMT,  -- 재료 양
    IT.INGREDIENT_TYPE,  -- 재료 유형 (예: 주재료, 부재료)
    S.STEP_ORD,  -- 조리 단계 순서
    S.INSTRUCTION,  -- 조리 설명
    S.IMAGE_URL AS STEP_IMAGE,  -- 조리 단계 이미지 경로
    T.TIP_CONTENT,  -- 팁 내용
    T.TIP_ORD  -- 팁 순서
FROM 
    RECIPE_TB R
LEFT JOIN RECIPE_CATEGORY1_TB C1 ON R.CATEGORY1_CD = C1.CATEGORY1_CD  -- 1차 카테고리 조인
LEFT JOIN RECIPE_CATEGORY2_TB C2 ON R.CATEGORY2_CD = C2.CATEGORY2_CD  -- 2차 카테고리 조인
LEFT JOIN RECIPE_INGREDIENT_TYPE_TB IT ON R.RECIPE_CD = IT.RECIPE_CD  -- 재료 유형 테이블 조인
LEFT JOIN RECIPE_INGREDIENT_TB I ON IT.INGREDIENT_CD = I.INGREDIENT_CD  -- 재료 테이블 조인
LEFT JOIN RECIPE_STEP_TB S ON R.RECIPE_CD = S.RECIPE_CD  -- 조리 단계 테이블 조인
LEFT JOIN TIP_TB T ON R.RECIPE_CD = T.RECIPE_CD  -- 팁 테이블 조인
ORDER BY 
    R.RECIPE_CD,  -- 레시피 코드별 정렬
    IT.TYPE_CD,  -- 재료 순서별 정렬
    S.STEP_ORD,  -- 조리 단계 순서별 정렬
    T.TIP_ORD;  -- 팁 순서별 정렬


desc RECIPE_CATEGORY2_TB;
DESC RECIPE_TB;
INSERT INTO RECIPE_CATEGORY2_TB (CATEGORY2_NAME, CATEGORY2_CD) VALUES ('볶음밥',5);
COMMIT;

CREATE SEQUENCE recipe_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE ingredient_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE type_seq START WITH 1 INCREMENT BY 1;
SELECT * FROM user_constraints WHERE table_name = 'RECIPE_INGREDIENT_TYPE_TB' AND constraint_name = 'SYS_C007323';
DROP SEQUENCE ingredient_seq;
DROP SEQUENCE ingredient_seq;
CREATE SEQUENCE ingredient_seq
  START WITH 30
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;
  COMMIT;
  
  SELECT TYPE_SEQ.CURRVAL FROM DUAL;
SELECT MAX(TYPE_CD) FROM RECIPE_INGREDIENT_TYPE_TB;
-- 현재 시퀀스의 NEXTVAL 호출
SELECT TYPE_SEQ.NEXTVAL FROM DUAL;

-- 테이블의 최대 TYPE_CD 값 확인
SELECT MAX(TYPE_CD) FROM RECIPE_INGREDIENT_TYPE_TB;
DROP SEQUENCE TYPE_SEQ;

CREATE SEQUENCE TYPE_SEQ
  START WITH(SELECT MAX(TYPE_CD) + 1 FROM RECIPE_INGREDIENT_TYPE_TB)
  INCREMENT BY 1;

SELECT MAX(TYPE_CD) FRCREATE SEQUENCE TYPE_SEQ
 CREATE SEQUCE TYPE_SEQ
  START WITH 4
  INCREMENT BY 1;
OM RECIPE_INGREDIENT_TYPE_TB;

CREATE SEQUENCE TYPE_SEQ
  START WITH 4
  INCREMENT BY 1;
COMMIT;
CREATE SEQUENCE STEP_SEQ
  START WITH 10
  INCREMENT BY 1;
COMMIT;

DROP SEQUENCE STEP_SEQ;
CREATE SEQUENCE TIP_SEQ
  START WITH 10
  INCREMENT BY 1;
COMMIT;

SELECT * FROM RECIPE_TB;

        SELECT 
	            -- 레시피 기본 정보
	            r.RECIPE_CD AS recipeCD,
	            r.RECIPE_NM AS recipeNM,
	            r.RECIPE_DESCRIPTION AS recipeDescription,
	            r.ESTIMATED_TIME AS estimatedTime,
	            r.COOKING_SERVINGS AS cookingServings,
	            r.RECIPE_MAIN_IMAGE AS recipeMainImage,
	            
	            -- 카테고리 이름 정보 가져오기
	            c1.CATEGORY1_NAME AS category1Name,
	            c2.CATEGORY2_NAME AS category2Name,
	
	            -- 재료 정보
	            i.INGREDIENT_CD AS ingredients_ingredientCD,
	            i.INGREDIENT_NM AS ingredients_ingredientNM,
	            it.INGREDIENT_AMT AS ingredients_ingredientAmt,
	            it.INGREDIENT_TYPE AS ingredients_ingredientType,
	
	            -- 조리 단계 정보
	            s.STEP_CD AS steps_stepCD,
	            s.STEP_ORD AS steps_stepORD,
	            s.INSTRUCTION AS steps_instruction,
	            s.IMAGE_URL AS steps_imageURL,
	
	            -- 팁 정보
	            t.TIP_CD AS tips_tipCD,
	            t.TIP_CONTENT AS tips_tipContent,
	            t.TIP_ORD AS tips_tipORD

        FROM 
	            RECIPE_TB r
	            -- 카테고리1과 카테고리2 조인
	            LEFT JOIN RECIPE_CATEGORY1_TB c1 ON r.CATEGORY1_CD = c1.CATEGORY1_CD
	            LEFT JOIN RECIPE_CATEGORY2_TB c2 ON r.CATEGORY2_CD = c2.CATEGORY2_CD
	            -- 재료, 재료타입 테이블 조인
	            LEFT JOIN RECIPE_INGREDIENT_TYPE_TB it ON r.RECIPE_CD = it.RECIPE_CD
	            LEFT JOIN RECIPE_INGREDIENT_TB i ON it.INGREDIENT_CD = i.INGREDIENT_CD
	            -- 조리 단계 테이블 조인
	            LEFT JOIN RECIPE_STEP_TB s ON r.RECIPE_CD = s.RECIPE_CD
	            -- 팁 테이블 조인
	            LEFT JOIN TIP_TB t ON r.RECIPE_CD = t.RECIPE_CD

        WHERE 
            	r.RECIPE_CD = 20

        ORDER BY 
            	s.STEP_ORD, t.TIP_ORD;
                
                
 SELECT INGREDIENT_NM, COUNT(*) 
FROM RECIPE_INGREDIENT_TB
GROUP BY INGREDIENT_NM
HAVING COUNT(*) > 1;

DELETE FROM RECIPE_INGREDIENT_TB
WHERE INGREDIENT_CD IN (
    SELECT INGREDIENT_CD
    FROM (
        SELECT INGREDIENT_CD,
               ROW_NUMBER() OVER (PARTITION BY INGREDIENT_NM ORDER BY INGREDIENT_CD) AS row_num
        FROM RECIPE_INGREDIENT_TB
    )
    WHERE row_num > 1
);

commit;

sql
코드 복사
CREATE TABLE RECIPE_COMMENT_TB (
    COMMENT_CD         NUMBER(10)     PRIMARY KEY,         -- 댓글 ID (Primary Key)
    RECIPE_CD          NUMBER(10)     NOT NULL,            -- 레시피 ID (Foreign Key로 연결 가능)
    USER_NO            NUMBER(10)     NOT NULL,            -- 사용자 ID (Foreign Key로 연결 가능)
    PARENT_COMMENT_CD  NUMBER(10)     DEFAULT 0,           -- 부모 댓글 ID (0이면 부모 댓글, 다른 값이면 대댓글)
    COMMENT_TEXT       VARCHAR2(1000) NOT NULL,            -- 댓글 내용
    IMAGE_URL          VARCHAR2(255),                      -- 댓글 이미지 URL (선택적)
    CREATED_DT         TIMESTAMP      DEFAULT SYSDATE,     -- 생성 날짜
    UPDATED_DT         TIMESTAMP,                          -- 수정 날짜
    CONSTRAINT FK_PARENT_COMMENT
        FOREIGN KEY (PARENT_COMMENT_CD)
        REFERENCES RECIPE_COMMENT_TB (COMMENT_CD)
        ON DELETE CASCADE
);

CREATE TABLE COMMENT_LIKE_TB (
    LIKE_ID       NUMBER(10)     PRIMARY KEY,          -- 좋아요 ID (Primary Key)
    COMMENT_CD    NUMBER(10)     NOT NULL,             -- 댓글 ID (Foreign Key)
    USER_NO       NUMBER(10)     NOT NULL,             -- 사용자 ID (Foreign Key)
    CREATED_DT    TIMESTAMP      DEFAULT SYSDATE,      -- 좋아요 생성 날짜
    CONSTRAINT FK_COMMENT_LIKE
        FOREIGN KEY (COMMENT_CD)
        REFERENCES RECIPE_COMMENT_TB (COMMENT_CD)
        ON DELETE CASCADE,
    CONSTRAINT FK_USER_LIKE
        FOREIGN KEY (USER_NO)
        REFERENCES USERS (USER_NO)
        ON DELETE CASCADE
);

CREATE SEQUENCE COMMENT_SEQ
START WITH 1       -- 시작 값
INCREMENT BY 1     -- 1씩 증가
NOCACHE            -- 캐싱을 사용하지 않음 (필요시 CACHE N 사용 가능)
NOCYCLE;           -- 최대 값 도달 시 다시 시작하지 않음