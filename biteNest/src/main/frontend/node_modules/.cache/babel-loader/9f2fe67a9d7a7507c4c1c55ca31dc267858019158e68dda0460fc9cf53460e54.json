{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isFreightContainerID = void 0;\nexports.isISO6346 = isISO6346;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n// https://en.wikipedia.org/wiki/ISO_6346\n// according to ISO6346 standard, checksum digit is mandatory for freight container but recommended\n// for other container types (J and Z)\nvar isISO6346Str = /^[A-Z]{3}(U[0-9]{7})|([J,Z][0-9]{6,7})$/;\nvar isDigit = /^[0-9]$/;\nfunction isISO6346(str) {\n  (0, _assertString.default)(str);\n  str = str.toUpperCase();\n  if (!isISO6346Str.test(str)) return false;\n  if (str.length === 11) {\n    var sum = 0;\n    for (var i = 0; i < str.length - 1; i++) {\n      if (!isDigit.test(str[i])) {\n        var convertedCode = void 0;\n        var letterCode = str.charCodeAt(i) - 55;\n        if (letterCode < 11) convertedCode = letterCode;else if (letterCode >= 11 && letterCode <= 20) convertedCode = 12 + letterCode % 11;else if (letterCode >= 21 && letterCode <= 30) convertedCode = 23 + letterCode % 21;else convertedCode = 34 + letterCode % 31;\n        sum += convertedCode * Math.pow(2, i);\n      } else sum += str[i] * Math.pow(2, i);\n    }\n    var checkSumDigit = sum % 11;\n    return Number(str[str.length - 1]) === checkSumDigit;\n  }\n  return true;\n}\nvar isFreightContainerID = exports.isFreightContainerID = isISO6346;","map":{"version":3,"names":["Object","defineProperty","exports","value","isFreightContainerID","isISO6346","_assertString","_interopRequireDefault","require","obj","__esModule","default","isISO6346Str","isDigit","str","toUpperCase","test","length","sum","i","convertedCode","letterCode","charCodeAt","Math","pow","checkSumDigit","Number"],"sources":["/Users/leeyangie/.yarn/berry/cache/validator-npm-13.12.0-6c8a423cbf-10c0.zip/node_modules/validator/lib/isISO6346.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isFreightContainerID = void 0;\nexports.isISO6346 = isISO6346;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// https://en.wikipedia.org/wiki/ISO_6346\n// according to ISO6346 standard, checksum digit is mandatory for freight container but recommended\n// for other container types (J and Z)\nvar isISO6346Str = /^[A-Z]{3}(U[0-9]{7})|([J,Z][0-9]{6,7})$/;\nvar isDigit = /^[0-9]$/;\nfunction isISO6346(str) {\n  (0, _assertString.default)(str);\n  str = str.toUpperCase();\n  if (!isISO6346Str.test(str)) return false;\n  if (str.length === 11) {\n    var sum = 0;\n    for (var i = 0; i < str.length - 1; i++) {\n      if (!isDigit.test(str[i])) {\n        var convertedCode = void 0;\n        var letterCode = str.charCodeAt(i) - 55;\n        if (letterCode < 11) convertedCode = letterCode;else if (letterCode >= 11 && letterCode <= 20) convertedCode = 12 + letterCode % 11;else if (letterCode >= 21 && letterCode <= 30) convertedCode = 23 + letterCode % 21;else convertedCode = 34 + letterCode % 31;\n        sum += convertedCode * Math.pow(2, i);\n      } else sum += str[i] * Math.pow(2, i);\n    }\n    var checkSumDigit = sum % 11;\n    return Number(str[str.length - 1]) === checkSumDigit;\n  }\n  return true;\n}\nvar isFreightContainerID = exports.isFreightContainerID = isISO6346;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrCF,OAAO,CAACG,SAAS,GAAGA,SAAS;AAC7B,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAC1E,SAASD,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEE,OAAO,EAAEF;EAAI,CAAC;AAAE;AAC9F;AACA;AACA;AACA,IAAIG,YAAY,GAAG,yCAAyC;AAC5D,IAAIC,OAAO,GAAG,SAAS;AACvB,SAASR,SAASA,CAACS,GAAG,EAAE;EACtB,CAAC,CAAC,EAAER,aAAa,CAACK,OAAO,EAAEG,GAAG,CAAC;EAC/BA,GAAG,GAAGA,GAAG,CAACC,WAAW,CAAC,CAAC;EACvB,IAAI,CAACH,YAAY,CAACI,IAAI,CAACF,GAAG,CAAC,EAAE,OAAO,KAAK;EACzC,IAAIA,GAAG,CAACG,MAAM,KAAK,EAAE,EAAE;IACrB,IAAIC,GAAG,GAAG,CAAC;IACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,GAAG,CAACG,MAAM,GAAG,CAAC,EAAEE,CAAC,EAAE,EAAE;MACvC,IAAI,CAACN,OAAO,CAACG,IAAI,CAACF,GAAG,CAACK,CAAC,CAAC,CAAC,EAAE;QACzB,IAAIC,aAAa,GAAG,KAAK,CAAC;QAC1B,IAAIC,UAAU,GAAGP,GAAG,CAACQ,UAAU,CAACH,CAAC,CAAC,GAAG,EAAE;QACvC,IAAIE,UAAU,GAAG,EAAE,EAAED,aAAa,GAAGC,UAAU,CAAC,KAAK,IAAIA,UAAU,IAAI,EAAE,IAAIA,UAAU,IAAI,EAAE,EAAED,aAAa,GAAG,EAAE,GAAGC,UAAU,GAAG,EAAE,CAAC,KAAK,IAAIA,UAAU,IAAI,EAAE,IAAIA,UAAU,IAAI,EAAE,EAAED,aAAa,GAAG,EAAE,GAAGC,UAAU,GAAG,EAAE,CAAC,KAAKD,aAAa,GAAG,EAAE,GAAGC,UAAU,GAAG,EAAE;QACjQH,GAAG,IAAIE,aAAa,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,CAAC,CAAC;MACvC,CAAC,MAAMD,GAAG,IAAIJ,GAAG,CAACK,CAAC,CAAC,GAAGI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,CAAC,CAAC;IACvC;IACA,IAAIM,aAAa,GAAGP,GAAG,GAAG,EAAE;IAC5B,OAAOQ,MAAM,CAACZ,GAAG,CAACA,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC,CAAC,KAAKQ,aAAa;EACtD;EACA,OAAO,IAAI;AACb;AACA,IAAIrB,oBAAoB,GAAGF,OAAO,CAACE,oBAAoB,GAAGC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}