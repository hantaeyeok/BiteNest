{"ast":null,"code":"var _jsxFileName = \"/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/components/auth/AuthGuard.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { userAtom } from '@atoms/user';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AuthGuard({\n  children\n}) {\n  _s();\n  const [user, setUser] = useRecoilState(userAtom);\n  const [initialize, setInitialize] = useState(false); // 초기화 상태 추가\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const email = localStorage.getItem('email');\n    const nickName = localStorage.getItem('nickName');\n    const id = localStorage.getItem('id');\n    if (token && email && nickName && id) {\n      // 로컬 스토리지에 유저 정보가 있으면 설정\n      setUser({\n        token,\n        email,\n        nickName,\n        id\n      });\n    } else {\n      // 유저 정보가 없으면 null로 설정\n      setUser(null);\n    }\n\n    // 초기화 완료\n    setInitialize(true); // 로딩이 완료되면 초기화 완료 상태로 변경\n  }, [setUser]);\n  if (initialize === false) {\n    // 초기화 중일 때 로딩 메시지 또는 스피너 출력\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 초기화가 완료되고 유저가 있으면 자식 컴포넌트 렌더링\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n}\n_s(AuthGuard, \"kw4yeFuvRxoXEaLyNaQmSEiSYf0=\", false, function () {\n  return [useRecoilState];\n});\n_c = AuthGuard;\nexport default AuthGuard;\nvar _c;\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"names":["useEffect","useState","useRecoilState","userAtom","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthGuard","children","_s","user","setUser","initialize","setInitialize","token","localStorage","getItem","email","nickName","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/components/auth/AuthGuard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useRecoilState } from 'recoil'\nimport { userAtom } from '@atoms/user'\n\nfunction AuthGuard({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useRecoilState(userAtom)\n  const [initialize, setInitialize] = useState(false) // 초기화 상태 추가\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    const email = localStorage.getItem('email')\n    const nickName = localStorage.getItem('nickName')\n    const id = localStorage.getItem('id')\n\n    if (token && email && nickName && id) {\n      // 로컬 스토리지에 유저 정보가 있으면 설정\n      setUser({\n        token,\n        email,\n        nickName,\n        id,\n      })\n    } else {\n      // 유저 정보가 없으면 null로 설정\n      setUser(null)\n    }\n\n    // 초기화 완료\n    setInitialize(true) // 로딩이 완료되면 초기화 완료 상태로 변경\n  }, [setUser])\n\n  if (initialize === false) {\n    // 초기화 중일 때 로딩 메시지 또는 스피너 출력\n    return <div>Loading...</div>\n  }\n\n  // 초기화가 완료되고 유저가 있으면 자식 컴포넌트 렌더링\n  return <>{children}</>\n}\n\nexport default AuthGuard\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,QAAQ,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,SAASA,CAAC;EAAEC;AAAwC,CAAC,EAAE;EAAAC,EAAA;EAC9D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,cAAc,CAACC,QAAQ,CAAC;EAChD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,EAAC;;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAME,QAAQ,GAAGH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,MAAMG,EAAE,GAAGJ,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;IAErC,IAAIF,KAAK,IAAIG,KAAK,IAAIC,QAAQ,IAAIC,EAAE,EAAE;MACpC;MACAR,OAAO,CAAC;QACNG,KAAK;QACLG,KAAK;QACLC,QAAQ;QACRC;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAR,OAAO,CAAC,IAAI,CAAC;IACf;;IAEA;IACAE,aAAa,CAAC,IAAI,CAAC,EAAC;EACtB,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,IAAIC,UAAU,KAAK,KAAK,EAAE;IACxB;IACA,oBAAOR,OAAA;MAAAI,QAAA,EAAK;IAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;;EAEA;EACA,oBAAOnB,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB;AAACC,EAAA,CAlCQF,SAAS;EAAA,QACQN,cAAc;AAAA;AAAAuB,EAAA,GAD/BjB,SAAS;AAoClB,eAAeA,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}