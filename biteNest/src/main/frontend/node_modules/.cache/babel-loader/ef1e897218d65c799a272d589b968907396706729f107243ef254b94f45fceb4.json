{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BatchInterceptor = void 0;\nvar Interceptor_1 = require(\"./Interceptor\");\n/**\n * A batch interceptor that exposes a single interface\n * to apply and operate with multiple interceptors at once.\n */\nvar BatchInterceptor = /** @class */function (_super) {\n  __extends(BatchInterceptor, _super);\n  function BatchInterceptor(options) {\n    var _this = this;\n    BatchInterceptor.symbol = Symbol(options.name);\n    _this = _super.call(this, BatchInterceptor.symbol) || this;\n    _this.interceptors = options.interceptors;\n    return _this;\n  }\n  BatchInterceptor.prototype.setup = function () {\n    var e_1, _a;\n    var log = this.log.extend('setup');\n    log('applying all %d interceptors...', this.interceptors.length);\n    var _loop_1 = function (interceptor) {\n      log('applying \"%s\" interceptor...', interceptor.constructor.name);\n      interceptor.apply();\n      log('adding interceptor dispose subscription');\n      this_1.subscriptions.push(function () {\n        return interceptor.dispose();\n      });\n    };\n    var this_1 = this;\n    try {\n      for (var _b = __values(this.interceptors), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var interceptor = _c.value;\n        _loop_1(interceptor);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  BatchInterceptor.prototype.on = function (event, listener) {\n    // Instead of adding a listener to the batch interceptor,\n    // propagate the listener to each of the individual interceptors.\n    this.interceptors.forEach(function (interceptor) {\n      interceptor.on(event, listener);\n    });\n  };\n  return BatchInterceptor;\n}(Interceptor_1.Interceptor);\nexports.BatchInterceptor = BatchInterceptor;","map":{"version":3,"names":["Interceptor_1","require","BatchInterceptor","_super","__extends","options","_this","symbol","Symbol","name","call","interceptors","prototype","setup","log","extend","length","interceptor","constructor","apply","this_1","subscriptions","push","dispose","_b","__values","_c","next","done","value","on","event","listener","forEach","Interceptor","exports"],"sources":["/Users/leeyangie/.yarn/berry/cache/@mswjs-interceptors-npm-0.17.10-c1199a9424-10c0.zip/node_modules/@mswjs/interceptors/src/BatchInterceptor.ts"],"sourcesContent":["import { EventMapType } from 'strict-event-emitter'\nimport { ExtractEventNames, Interceptor } from './Interceptor'\n\nexport interface BatchInterceptorOptions<\n  InterceptorList extends Interceptor<any>[]\n> {\n  name: string\n  interceptors: InterceptorList\n}\n\nexport type ExtractEventMapType<InterceptorList extends Interceptor<any>[]> =\n  InterceptorList extends Array<infer InterceptorType>\n    ? InterceptorType extends Interceptor<infer EventMap>\n      ? EventMap\n      : never\n    : never\n\n/**\n * A batch interceptor that exposes a single interface\n * to apply and operate with multiple interceptors at once.\n */\nexport class BatchInterceptor<\n  InterceptorList extends Interceptor<any>[],\n  EventMap extends EventMapType = ExtractEventMapType<InterceptorList>\n> extends Interceptor<EventMap> {\n  static symbol: Symbol\n\n  private interceptors: InterceptorList\n\n  constructor(options: BatchInterceptorOptions<InterceptorList>) {\n    BatchInterceptor.symbol = Symbol(options.name)\n    super(BatchInterceptor.symbol)\n    this.interceptors = options.interceptors\n  }\n\n  protected setup() {\n    const log = this.log.extend('setup')\n\n    log('applying all %d interceptors...', this.interceptors.length)\n\n    for (const interceptor of this.interceptors) {\n      log('applying \"%s\" interceptor...', interceptor.constructor.name)\n      interceptor.apply()\n\n      log('adding interceptor dispose subscription')\n      this.subscriptions.push(() => interceptor.dispose())\n    }\n  }\n\n  public on<Event extends ExtractEventNames<EventMap>>(\n    event: Event,\n    listener: EventMap[Event]\n  ) {\n    // Instead of adding a listener to the batch interceptor,\n    // propagate the listener to each of the individual interceptors.\n    this.interceptors.forEach((interceptor) => {\n      interceptor.on(event, listener)\n    })\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAAA,aAAA,GAAAC,OAAA;AAgBA;;;;AAIA,IAAAC,gBAAA,0BAAAC,MAAA;EAGUC,SAAA,CAAAF,gBAAA,EAAAC,MAAA;EAKR,SAAAD,iBAAYG,OAAiD;IAA7D,IAAAC,KAAA;IACEJ,gBAAgB,CAACK,MAAM,GAAGC,MAAM,CAACH,OAAO,CAACI,IAAI,CAAC;IAC9CH,KAAA,GAAAH,MAAA,CAAAO,IAAA,OAAMR,gBAAgB,CAACK,MAAM,CAAC;IAC9BD,KAAI,CAACK,YAAY,GAAGN,OAAO,CAACM,YAAY;;EAC1C;EAEUT,gBAAA,CAAAU,SAAA,CAAAC,KAAK,GAAf;;IACE,IAAMC,GAAG,GAAG,IAAI,CAACA,GAAG,CAACC,MAAM,CAAC,OAAO,CAAC;IAEpCD,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAACH,YAAY,CAACK,MAAM,CAAC;4BAErDC,WAAW;MACpBH,GAAG,CAAC,8BAA8B,EAAEG,WAAW,CAACC,WAAW,CAACT,IAAI,CAAC;MACjEQ,WAAW,CAACE,KAAK,EAAE;MAEnBL,GAAG,CAAC,yCAAyC,CAAC;MAC9CM,MAAA,CAAKC,aAAa,CAACC,IAAI,CAAC;QAAM,OAAAL,WAAW,CAACM,OAAO,EAAE;MAArB,CAAqB,CAAC;;;;MALtD,KAA0B,IAAAC,EAAA,GAAAC,QAAA,KAAI,CAACd,YAAY,GAAAe,EAAA,GAAAF,EAAA,CAAAG,IAAA,KAAAD,EAAA,CAAAE,IAAA,EAAAF,EAAA,GAAAF,EAAA,CAAAG,IAAA;QAAtC,IAAMV,WAAW,GAAAS,EAAA,CAAAG,KAAA;gBAAXZ,WAAW;;;;;;;;;;;;;EAOxB,CAAC;EAEMf,gBAAA,CAAAU,SAAA,CAAAkB,EAAE,GAAT,UACEC,KAAY,EACZC,QAAyB;IAEzB;IACA;IACA,IAAI,CAACrB,YAAY,CAACsB,OAAO,CAAC,UAAChB,WAAW;MACpCA,WAAW,CAACa,EAAE,CAACC,KAAK,EAAEC,QAAQ,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC;EACH,OAAA9B,gBAAC;AAAD,CAAC,CAnCSF,aAAA,CAAAkC,WAAW;AAHRC,OAAA,CAAAjC,gBAAA,GAAAA,gBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}