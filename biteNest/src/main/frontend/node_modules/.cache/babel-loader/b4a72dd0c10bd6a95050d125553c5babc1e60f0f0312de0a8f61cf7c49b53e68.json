{"ast":null,"code":"import { format } from \"outvariant\";\nconst LIBRARY_PREFIX = \"[MSW]\";\nfunction formatMessage(message, ...positionals) {\n  const interpolatedMessage = format(message, ...positionals);\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`;\n}\nfunction warn(message, ...positionals) {\n  console.warn(formatMessage(message, ...positionals));\n}\nfunction error(message, ...positionals) {\n  console.error(formatMessage(message, ...positionals));\n}\nconst devUtils = {\n  formatMessage,\n  warn,\n  error\n};\nexport { devUtils };","map":{"version":3,"names":["format","LIBRARY_PREFIX","formatMessage","message","positionals","interpolatedMessage","warn","console","error","devUtils"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/.yarn/unplugged/msw-virtual-c17a34f746/node_modules/msw/src/core/utils/internal/devUtils.ts"],"sourcesContent":["import { format } from 'outvariant'\n\nconst LIBRARY_PREFIX = '[MSW]'\n\n/**\n * Formats a given message by appending the library's prefix string.\n */\nfunction formatMessage(message: string, ...positionals: any[]): string {\n  const interpolatedMessage = format(message, ...positionals)\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`\n}\n\n/**\n * Prints a library-specific warning.\n */\nfunction warn(message: string, ...positionals: any[]): void {\n  console.warn(formatMessage(message, ...positionals))\n}\n\n/**\n * Prints a library-specific error.\n */\nfunction error(message: string, ...positionals: any[]): void {\n  console.error(formatMessage(message, ...positionals))\n}\n\nexport const devUtils = {\n  formatMessage,\n  warn,\n  error,\n}\n"],"mappings":"AAAA,SAASA,MAAA,QAAc;AAEvB,MAAMC,cAAA,GAAiB;AAKvB,SAASC,cAAcC,OAAA,KAAoBC,WAAA,EAA4B;EACrE,MAAMC,mBAAA,GAAsBL,MAAA,CAAOG,OAAA,EAAS,GAAGC,WAAW;EAC1D,OAAO,GAAGH,cAAc,IAAII,mBAAmB;AACjD;AAKA,SAASC,KAAKH,OAAA,KAAoBC,WAAA,EAA0B;EAC1DG,OAAA,CAAQD,IAAA,CAAKJ,aAAA,CAAcC,OAAA,EAAS,GAAGC,WAAW,CAAC;AACrD;AAKA,SAASI,MAAML,OAAA,KAAoBC,WAAA,EAA0B;EAC3DG,OAAA,CAAQC,KAAA,CAAMN,aAAA,CAAcC,OAAA,EAAS,GAAGC,WAAW,CAAC;AACtD;AAEO,MAAMK,QAAA,GAAW;EACtBP,aAAA;EACAI,IAAA;EACAE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}