{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { invariant } from \"outvariant\";\nimport { getCallFrame } from '../utils/internal/getCallFrame.mjs';\nimport { isIterable } from '../utils/internal/isIterable.mjs';\nclass RequestHandler {\n  constructor(args) {\n    this.resolver = args.resolver;\n    this.options = args.options;\n    const callFrame = getCallFrame(new Error());\n    this.info = __spreadProps(__spreadValues({}, args.info), {\n      callFrame\n    });\n    this.isUsed = false;\n  }\n  /**\n   * Parse the intercepted request to extract additional information from it.\n   * Parsed result is then exposed to other methods of this request handler.\n   */\n  parse(_args) {\n    return __async(this, null, function* () {\n      return {};\n    });\n  }\n  /**\n   * Test if this handler matches the given request.\n   */\n  test(args) {\n    return __async(this, null, function* () {\n      const parsedResult = yield this.parse({\n        request: args.request,\n        resolutionContext: args.resolutionContext\n      });\n      return this.predicate({\n        request: args.request,\n        parsedResult,\n        resolutionContext: args.resolutionContext\n      });\n    });\n  }\n  extendResolverArgs(_args) {\n    return {};\n  }\n  /**\n   * Execute this request handler and produce a mocked response\n   * using the given resolver function.\n   */\n  run(args) {\n    return __async(this, null, function* () {\n      var _a;\n      if (this.isUsed && ((_a = this.options) == null ? void 0 : _a.once)) {\n        return null;\n      }\n      const mainRequestRef = args.request.clone();\n      this.isUsed = true;\n      const parsedResult = yield this.parse({\n        request: args.request,\n        resolutionContext: args.resolutionContext\n      });\n      const shouldInterceptRequest = this.predicate({\n        request: args.request,\n        parsedResult,\n        resolutionContext: args.resolutionContext\n      });\n      if (!shouldInterceptRequest) {\n        return null;\n      }\n      const executeResolver = this.wrapResolver(this.resolver);\n      const resolverExtras = this.extendResolverArgs({\n        request: args.request,\n        parsedResult\n      });\n      const mockedResponse = yield executeResolver(__spreadProps(__spreadValues({}, resolverExtras), {\n        request: args.request\n      }));\n      const executionResult = this.createExecutionResult({\n        // Pass the cloned request to the result so that logging\n        // and other consumers could read its body once more.\n        request: mainRequestRef,\n        response: mockedResponse,\n        parsedResult\n      });\n      return executionResult;\n    });\n  }\n  wrapResolver(resolver) {\n    return info => __async(this, null, function* () {\n      const result = this.resolverGenerator || (yield resolver(info));\n      if (isIterable(result)) {\n        this.isUsed = false;\n        const {\n          value,\n          done\n        } = result[Symbol.iterator]().next();\n        const nextResponse = yield value;\n        if (done) {\n          this.isUsed = true;\n        }\n        if (!nextResponse && done) {\n          invariant(this.resolverGeneratorResult, \"Failed to returned a previously stored generator response: the value is not a valid Response.\");\n          return this.resolverGeneratorResult.clone();\n        }\n        if (!this.resolverGenerator) {\n          this.resolverGenerator = result;\n        }\n        if (nextResponse) {\n          this.resolverGeneratorResult = nextResponse == null ? void 0 : nextResponse.clone();\n        }\n        return nextResponse;\n      }\n      return result;\n    });\n  }\n  createExecutionResult(args) {\n    return {\n      handler: this,\n      request: args.request,\n      response: args.response,\n      parsedResult: args.parsedResult\n    };\n  }\n}\nexport { RequestHandler };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","x","done","then","apply","invariant","getCallFrame","isIterable","RequestHandler","constructor","args","resolver","options","callFrame","Error","info","isUsed","parse","_args","test","parsedResult","request","resolutionContext","predicate","extendResolverArgs","run","_a","once","mainRequestRef","clone","shouldInterceptRequest","executeResolver","wrapResolver","resolverExtras","mockedResponse","executionResult","createExecutionResult","response","result","resolverGenerator","Symbol","iterator","nextResponse","resolverGeneratorResult","handler"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/.yarn/unplugged/msw-virtual-7370ac2e06/node_modules/msw/lib/core/handlers/RequestHandler.mjs"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { invariant } from \"outvariant\";\nimport { getCallFrame } from '../utils/internal/getCallFrame.mjs';\nimport { isIterable } from '../utils/internal/isIterable.mjs';\nclass RequestHandler {\n  constructor(args) {\n    this.resolver = args.resolver;\n    this.options = args.options;\n    const callFrame = getCallFrame(new Error());\n    this.info = __spreadProps(__spreadValues({}, args.info), {\n      callFrame\n    });\n    this.isUsed = false;\n  }\n  /**\n   * Parse the intercepted request to extract additional information from it.\n   * Parsed result is then exposed to other methods of this request handler.\n   */\n  parse(_args) {\n    return __async(this, null, function* () {\n      return {};\n    });\n  }\n  /**\n   * Test if this handler matches the given request.\n   */\n  test(args) {\n    return __async(this, null, function* () {\n      const parsedResult = yield this.parse({\n        request: args.request,\n        resolutionContext: args.resolutionContext\n      });\n      return this.predicate({\n        request: args.request,\n        parsedResult,\n        resolutionContext: args.resolutionContext\n      });\n    });\n  }\n  extendResolverArgs(_args) {\n    return {};\n  }\n  /**\n   * Execute this request handler and produce a mocked response\n   * using the given resolver function.\n   */\n  run(args) {\n    return __async(this, null, function* () {\n      var _a;\n      if (this.isUsed && ((_a = this.options) == null ? void 0 : _a.once)) {\n        return null;\n      }\n      const mainRequestRef = args.request.clone();\n      this.isUsed = true;\n      const parsedResult = yield this.parse({\n        request: args.request,\n        resolutionContext: args.resolutionContext\n      });\n      const shouldInterceptRequest = this.predicate({\n        request: args.request,\n        parsedResult,\n        resolutionContext: args.resolutionContext\n      });\n      if (!shouldInterceptRequest) {\n        return null;\n      }\n      const executeResolver = this.wrapResolver(this.resolver);\n      const resolverExtras = this.extendResolverArgs({\n        request: args.request,\n        parsedResult\n      });\n      const mockedResponse = yield executeResolver(__spreadProps(__spreadValues({}, resolverExtras), {\n        request: args.request\n      }));\n      const executionResult = this.createExecutionResult({\n        // Pass the cloned request to the result so that logging\n        // and other consumers could read its body once more.\n        request: mainRequestRef,\n        response: mockedResponse,\n        parsedResult\n      });\n      return executionResult;\n    });\n  }\n  wrapResolver(resolver) {\n    return (info) => __async(this, null, function* () {\n      const result = this.resolverGenerator || (yield resolver(info));\n      if (isIterable(result)) {\n        this.isUsed = false;\n        const { value, done } = result[Symbol.iterator]().next();\n        const nextResponse = yield value;\n        if (done) {\n          this.isUsed = true;\n        }\n        if (!nextResponse && done) {\n          invariant(\n            this.resolverGeneratorResult,\n            \"Failed to returned a previously stored generator response: the value is not a valid Response.\"\n          );\n          return this.resolverGeneratorResult.clone();\n        }\n        if (!this.resolverGenerator) {\n          this.resolverGenerator = result;\n        }\n        if (nextResponse) {\n          this.resolverGeneratorResult = nextResponse == null ? void 0 : nextResponse.clone();\n        }\n        return nextResponse;\n      }\n      return result;\n    });\n  }\n  createExecutionResult(args) {\n    return {\n      handler: this,\n      request: args.request,\n      response: args.response,\n      parsedResult: args.parsedResult\n    };\n  }\n}\nexport {\n  RequestHandler\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}