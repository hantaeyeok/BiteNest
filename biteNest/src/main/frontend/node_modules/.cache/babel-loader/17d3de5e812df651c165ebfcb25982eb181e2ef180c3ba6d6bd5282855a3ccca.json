{"ast":null,"code":"var _jsxFileName = \"/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/pages/mypage/Fridge.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport IngredientItem from '@/components/fridge/shared/ingredientItem';\nimport useUser from '@hooks/auth/useUser';\nimport Button from '@/components/shared/Button';\nimport Modal from '@shared/Modal';\nimport FridgeForm from '@/components/fridge/FridgeForm';\nimport FridgeItemDetails from '@/components/fridge/FridgeItemDetails'; // 새로운 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FridgePage() {\n  _s();\n  const {\n    user\n  } = useUser();\n  const [ingredients, setIngredients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false); // 재료 추가 모달 상태\n  const [selectedIngredient, setSelectedIngredient] = useState(null); // 선택된 재료\n  const [isDetailModalOpen, setIsDetailModalOpen] = useState(false); // 상세 모달 상태\n\n  useEffect(() => {\n    if (user && user.id) {\n      axios.get(`https://3ccfb3c6-7a46-4902-b117-a23e940861d2.mock.pstmn.io/api/fridge-ingredients`, {\n        params: {\n          userId: user.id\n        }\n      }).then(response => {\n        setIngredients(response.data);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      });\n    }\n  }, [user]);\n\n  // 모달 열기/닫기 핸들러\n  const handleOpenModal = () => {\n    setIsModalOpen(true); // 재료 추가 모달 열기\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false); // 재료 추가 모달 닫기\n  };\n  const handleIngredientClick = ingredient => {\n    setSelectedIngredient(ingredient); // 선택된 재료 저장\n    setIsDetailModalOpen(true); // 상세 모달 열기\n  };\n  const handleCloseDetailModal = () => {\n    setIsDetailModalOpen(false); // 상세 모달 닫기\n    setSelectedIngredient(null); // 선택된 재료 초기화\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative h-full w-full min-h-[500px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        label: \"\\uC7AC\\uB8CC \\uB4F1\\uB85D\\uD558\\uAE30\",\n        size: \"small\",\n        onClick: handleOpenModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-4\",\n      children: ingredients.length > 0 ? ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(IngredientItem, {\n        ingredient: ingredient,\n        onClick: () => handleIngredientClick(ingredient) // 재료 클릭 시 상세 모달 열기\n      }, ingredient.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uB0C9\\uC7A5\\uACE0\\uC5D0 \\uC800\\uC7A5\\uB41C \\uC7AC\\uB8CC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute w-full bottom-1\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        label: \"\\uB098\\uC758 \\uB9DE\\uCDA4 \\uB808\\uC2DC\\uD53C\",\n        size: \"full\",\n        color: \"bg-green-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(FridgeForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), selectedIngredient && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isDetailModalOpen,\n      onClose: handleCloseDetailModal,\n      children: /*#__PURE__*/_jsxDEV(FridgeItemDetails, {\n        ingredient: {\n          ...selectedIngredient,\n          registrationDate: selectedIngredient.registrationDate || '',\n          // 기본값 사용\n          expirationDate: selectedIngredient.expirationDate || 'N' // 기본값 사용\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(FridgePage, \"srRHidqSC6aYSvSvU0bVDNxxOgw=\", false, function () {\n  return [useUser];\n});\n_c = FridgePage;\nexport default FridgePage;\nvar _c;\n$RefreshReg$(_c, \"FridgePage\");","map":{"version":3,"names":["useEffect","useState","axios","IngredientItem","useUser","Button","Modal","FridgeForm","FridgeItemDetails","jsxDEV","_jsxDEV","FridgePage","_s","user","ingredients","setIngredients","loading","setLoading","isModalOpen","setIsModalOpen","selectedIngredient","setSelectedIngredient","isDetailModalOpen","setIsDetailModalOpen","id","get","params","userId","then","response","data","catch","error","console","handleOpenModal","handleCloseModal","handleIngredientClick","ingredient","handleCloseDetailModal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","label","size","onClick","length","map","color","isOpen","onClose","registrationDate","expirationDate","_c","$RefreshReg$"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/pages/mypage/Fridge.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Ingredient } from '@models/ingredient'\nimport IngredientItem from '@/components/fridge/shared/ingredientItem'\nimport useUser from '@hooks/auth/useUser'\nimport Button from '@/components/shared/Button'\nimport Modal from '@shared/Modal'\nimport FridgeForm from '@/components/fridge/FridgeForm'\nimport FridgeItemDetails from '@/components/fridge/FridgeItemDetails' // 새로운 컴포넌트\n\nfunction FridgePage() {\n  const { user } = useUser()\n  const [ingredients, setIngredients] = useState<Ingredient[]>([])\n  const [loading, setLoading] = useState<boolean>(true)\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false) // 재료 추가 모달 상태\n  const [selectedIngredient, setSelectedIngredient] =\n    useState<Ingredient | null>(null) // 선택된 재료\n  const [isDetailModalOpen, setIsDetailModalOpen] = useState<boolean>(false) // 상세 모달 상태\n\n  useEffect(() => {\n    if (user && user.id) {\n      axios\n        .get(\n          `https://3ccfb3c6-7a46-4902-b117-a23e940861d2.mock.pstmn.io/api/fridge-ingredients`,\n          {\n            params: { userId: user.id },\n          },\n        )\n        .then((response) => {\n          setIngredients(response.data)\n          setLoading(false)\n        })\n        .catch((error) => {\n          console.error('Error fetching data:', error)\n          setLoading(false)\n        })\n    }\n  }, [user])\n\n  // 모달 열기/닫기 핸들러\n  const handleOpenModal = () => {\n    setIsModalOpen(true) // 재료 추가 모달 열기\n  }\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false) // 재료 추가 모달 닫기\n  }\n\n  const handleIngredientClick = (ingredient: Ingredient) => {\n    setSelectedIngredient(ingredient) // 선택된 재료 저장\n    setIsDetailModalOpen(true) // 상세 모달 열기\n  }\n\n  const handleCloseDetailModal = () => {\n    setIsDetailModalOpen(false) // 상세 모달 닫기\n    setSelectedIngredient(null) // 선택된 재료 초기화\n  }\n\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <div className=\"relative h-full w-full min-h-[500px]\">\n      <div className=\"flex justify-end\">\n        <Button\n          label=\"재료 등록하기\"\n          size=\"small\"\n          onClick={handleOpenModal}\n        ></Button>{' '}\n      </div>\n      <div className=\"my-6\"></div>\n      <div className=\"grid grid-cols-1 gap-4\">\n        {ingredients.length > 0 ? (\n          ingredients.map((ingredient) => (\n            <IngredientItem\n              key={ingredient.id}\n              ingredient={ingredient}\n              onClick={() => handleIngredientClick(ingredient)} // 재료 클릭 시 상세 모달 열기\n            />\n          ))\n        ) : (\n          <div>냉장고에 저장된 재료가 없습니다.</div>\n        )}\n      </div>\n      <div className=\"absolute w-full bottom-1\">\n        <Button\n          label=\"나의 맞춤 레시피\"\n          size=\"full\"\n          color=\"bg-green-100\"\n        ></Button>\n      </div>\n\n      {/* 재료 등록 모달 */}\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n        <FridgeForm />\n      </Modal>\n\n      {/* 재료 상세 정보 모달 */}\n      {selectedIngredient && (\n        <Modal isOpen={isDetailModalOpen} onClose={handleCloseDetailModal}>\n          <FridgeItemDetails\n            ingredient={{\n              ...selectedIngredient,\n              registrationDate: selectedIngredient.registrationDate || '', // 기본값 사용\n              expirationDate: selectedIngredient.expirationDate || 'N', // 기본값 사용\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  )\n}\n\nexport default FridgePage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}