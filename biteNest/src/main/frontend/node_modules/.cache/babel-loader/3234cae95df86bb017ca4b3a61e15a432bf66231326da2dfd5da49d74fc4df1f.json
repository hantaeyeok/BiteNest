{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.store = exports.PERSISTENCY_KEY = void 0;\nconst set_cookie_parser_1 = require(\"set-cookie-parser\");\nexports.PERSISTENCY_KEY = 'MSW_COOKIE_STORE';\nfunction supportsLocalStorage() {\n  try {\n    if (localStorage == null) {\n      return false;\n    }\n    const testKey = exports.PERSISTENCY_KEY + '_test';\n    localStorage.setItem(testKey, 'test');\n    localStorage.getItem(testKey);\n    localStorage.removeItem(testKey);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\nclass CookieStore {\n  constructor() {\n    this.store = new Map();\n  }\n  /**\n   * Sets the given request cookies into the store.\n   * Respects the `request.credentials` policy.\n   */\n  add(request, response) {\n    if (request.credentials === 'omit') {\n      return;\n    }\n    const requestUrl = new URL(request.url);\n    const responseCookies = response.headers.get('set-cookie');\n    if (!responseCookies) {\n      return;\n    }\n    const now = Date.now();\n    const parsedResponseCookies = set_cookie_parser_1.parse(responseCookies).map(_a => {\n      var {\n          maxAge\n        } = _a,\n        cookie = __rest(_a, [\"maxAge\"]);\n      return Object.assign(Object.assign({}, cookie), {\n        expires: maxAge === undefined ? cookie.expires : new Date(now + maxAge * 1000),\n        maxAge\n      });\n    });\n    const prevCookies = this.store.get(requestUrl.origin) || new Map();\n    parsedResponseCookies.forEach(cookie => {\n      this.store.set(requestUrl.origin, prevCookies.set(cookie.name, cookie));\n    });\n  }\n  /**\n   * Returns cookies relevant to the given request\n   * and its `request.credentials` policy.\n   */\n  get(request) {\n    this.deleteExpiredCookies();\n    const requestUrl = new URL(request.url);\n    const originCookies = this.store.get(requestUrl.origin) || new Map();\n    switch (request.credentials) {\n      case 'include':\n        {\n          // Support running this method in Node.js.\n          if (typeof document === 'undefined') {\n            return originCookies;\n          }\n          const documentCookies = set_cookie_parser_1.parse(document.cookie);\n          documentCookies.forEach(cookie => {\n            originCookies.set(cookie.name, cookie);\n          });\n          return originCookies;\n        }\n      case 'same-origin':\n        {\n          return originCookies;\n        }\n      default:\n        return new Map();\n    }\n  }\n  /**\n   * Returns a collection of all stored cookies.\n   */\n  getAll() {\n    this.deleteExpiredCookies();\n    return this.store;\n  }\n  /**\n   * Deletes all cookies associated with the given request.\n   */\n  deleteAll(request) {\n    const requestUrl = new URL(request.url);\n    this.store.delete(requestUrl.origin);\n  }\n  /**\n   * Clears the entire cookie store.\n   */\n  clear() {\n    this.store.clear();\n  }\n  /**\n   * Hydrates the virtual cookie store from the `localStorage` if defined.\n   */\n  hydrate() {\n    if (!supportsLocalStorage()) {\n      return;\n    }\n    const persistedCookies = localStorage.getItem(exports.PERSISTENCY_KEY);\n    if (!persistedCookies) {\n      return;\n    }\n    try {\n      const parsedCookies = JSON.parse(persistedCookies);\n      parsedCookies.forEach(([origin, cookies]) => {\n        this.store.set(origin, new Map(cookies.map(_a => {\n          var [token, _b] = _a,\n            {\n              expires\n            } = _b,\n            cookie = __rest(_b, [\"expires\"]);\n          return [token, expires === undefined ? cookie : Object.assign(Object.assign({}, cookie), {\n            expires: new Date(expires)\n          })];\n        })));\n      });\n    } catch (error) {\n      console.warn(`\n[virtual-cookie] Failed to parse a stored cookie from the localStorage (key \"${exports.PERSISTENCY_KEY}\").\n\nStored value:\n${localStorage.getItem(exports.PERSISTENCY_KEY)}\n\nThrown exception:\n${error}\n\nInvalid value has been removed from localStorage to prevent subsequent failed parsing attempts.`);\n      localStorage.removeItem(exports.PERSISTENCY_KEY);\n    }\n  }\n  /**\n   * Persists the current virtual cookies into the `localStorage` if defined,\n   * so they are available on the next page load.\n   */\n  persist() {\n    if (!supportsLocalStorage()) {\n      return;\n    }\n    const serializedCookies = Array.from(this.store.entries()).map(([origin, cookies]) => {\n      return [origin, Array.from(cookies.entries())];\n    });\n    localStorage.setItem(exports.PERSISTENCY_KEY, JSON.stringify(serializedCookies));\n  }\n  deleteExpiredCookies() {\n    const now = Date.now();\n    this.store.forEach((originCookies, origin) => {\n      originCookies.forEach(({\n        expires,\n        name\n      }) => {\n        if (expires !== undefined && expires.getTime() <= now) {\n          originCookies.delete(name);\n        }\n      });\n      if (originCookies.size === 0) {\n        this.store.delete(origin);\n      }\n    });\n  }\n}\nexports.store = new CookieStore();","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","defineProperty","exports","value","store","PERSISTENCY_KEY","set_cookie_parser_1","require","supportsLocalStorage","localStorage","testKey","setItem","getItem","removeItem","error","CookieStore","constructor","Map","add","request","response","credentials","requestUrl","URL","url","responseCookies","headers","get","now","Date","parsedResponseCookies","parse","map","_a","maxAge","cookie","assign","expires","undefined","prevCookies","origin","forEach","set","name","deleteExpiredCookies","originCookies","document","documentCookies","getAll","deleteAll","delete","clear","hydrate","persistedCookies","parsedCookies","JSON","cookies","token","_b","console","warn","persist","serializedCookies","Array","from","entries","stringify","getTime","size"],"sources":["/Users/leeyangie/.yarn/berry/cache/@mswjs-cookies-npm-0.2.2-fdd3f4ab67-10c0.zip/node_modules/@mswjs/cookies/lib/store.js"],"sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.store = exports.PERSISTENCY_KEY = void 0;\nconst set_cookie_parser_1 = require(\"set-cookie-parser\");\nexports.PERSISTENCY_KEY = 'MSW_COOKIE_STORE';\nfunction supportsLocalStorage() {\n    try {\n        if (localStorage == null) {\n            return false;\n        }\n        const testKey = exports.PERSISTENCY_KEY + '_test';\n        localStorage.setItem(testKey, 'test');\n        localStorage.getItem(testKey);\n        localStorage.removeItem(testKey);\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\nclass CookieStore {\n    constructor() {\n        this.store = new Map();\n    }\n    /**\n     * Sets the given request cookies into the store.\n     * Respects the `request.credentials` policy.\n     */\n    add(request, response) {\n        if (request.credentials === 'omit') {\n            return;\n        }\n        const requestUrl = new URL(request.url);\n        const responseCookies = response.headers.get('set-cookie');\n        if (!responseCookies) {\n            return;\n        }\n        const now = Date.now();\n        const parsedResponseCookies = set_cookie_parser_1.parse(responseCookies).map((_a) => {\n            var { maxAge } = _a, cookie = __rest(_a, [\"maxAge\"]);\n            return (Object.assign(Object.assign({}, cookie), { expires: maxAge === undefined ? cookie.expires : new Date(now + maxAge * 1000), maxAge }));\n        });\n        const prevCookies = this.store.get(requestUrl.origin) || new Map();\n        parsedResponseCookies.forEach((cookie) => {\n            this.store.set(requestUrl.origin, prevCookies.set(cookie.name, cookie));\n        });\n    }\n    /**\n     * Returns cookies relevant to the given request\n     * and its `request.credentials` policy.\n     */\n    get(request) {\n        this.deleteExpiredCookies();\n        const requestUrl = new URL(request.url);\n        const originCookies = this.store.get(requestUrl.origin) || new Map();\n        switch (request.credentials) {\n            case 'include': {\n                // Support running this method in Node.js.\n                if (typeof document === 'undefined') {\n                    return originCookies;\n                }\n                const documentCookies = set_cookie_parser_1.parse(document.cookie);\n                documentCookies.forEach((cookie) => {\n                    originCookies.set(cookie.name, cookie);\n                });\n                return originCookies;\n            }\n            case 'same-origin': {\n                return originCookies;\n            }\n            default:\n                return new Map();\n        }\n    }\n    /**\n     * Returns a collection of all stored cookies.\n     */\n    getAll() {\n        this.deleteExpiredCookies();\n        return this.store;\n    }\n    /**\n     * Deletes all cookies associated with the given request.\n     */\n    deleteAll(request) {\n        const requestUrl = new URL(request.url);\n        this.store.delete(requestUrl.origin);\n    }\n    /**\n     * Clears the entire cookie store.\n     */\n    clear() {\n        this.store.clear();\n    }\n    /**\n     * Hydrates the virtual cookie store from the `localStorage` if defined.\n     */\n    hydrate() {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        const persistedCookies = localStorage.getItem(exports.PERSISTENCY_KEY);\n        if (!persistedCookies) {\n            return;\n        }\n        try {\n            const parsedCookies = JSON.parse(persistedCookies);\n            parsedCookies.forEach(([origin, cookies]) => {\n                this.store.set(origin, new Map(cookies.map((_a) => {\n                    var [token, _b] = _a, { expires } = _b, cookie = __rest(_b, [\"expires\"]);\n                    return [\n                        token,\n                        expires === undefined\n                            ? cookie\n                            : Object.assign(Object.assign({}, cookie), { expires: new Date(expires) }),\n                    ];\n                })));\n            });\n        }\n        catch (error) {\n            console.warn(`\n[virtual-cookie] Failed to parse a stored cookie from the localStorage (key \"${exports.PERSISTENCY_KEY}\").\n\nStored value:\n${localStorage.getItem(exports.PERSISTENCY_KEY)}\n\nThrown exception:\n${error}\n\nInvalid value has been removed from localStorage to prevent subsequent failed parsing attempts.`);\n            localStorage.removeItem(exports.PERSISTENCY_KEY);\n        }\n    }\n    /**\n     * Persists the current virtual cookies into the `localStorage` if defined,\n     * so they are available on the next page load.\n     */\n    persist() {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        const serializedCookies = Array.from(this.store.entries()).map(([origin, cookies]) => {\n            return [origin, Array.from(cookies.entries())];\n        });\n        localStorage.setItem(exports.PERSISTENCY_KEY, JSON.stringify(serializedCookies));\n    }\n    deleteExpiredCookies() {\n        const now = Date.now();\n        this.store.forEach((originCookies, origin) => {\n            originCookies.forEach(({ expires, name }) => {\n                if (expires !== undefined && expires.getTime() <= now) {\n                    originCookies.delete(name);\n                }\n            });\n            if (originCookies.size === 0) {\n                this.store.delete(origin);\n            }\n        });\n    }\n}\nexports.store = new CookieStore();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}