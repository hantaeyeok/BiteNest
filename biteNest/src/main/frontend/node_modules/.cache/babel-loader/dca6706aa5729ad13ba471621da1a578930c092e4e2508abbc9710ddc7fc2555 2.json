{"ast":null,"code":"var _jsxFileName = \"/Users/leeyangie/Desktop/BiteNest/bitenest/src/components/shared/TextField.tsx\";\nimport { forwardRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextField = /*#__PURE__*/forwardRef(_c = function TextField({\n  label,\n  placeholder,\n  hasError\n}, ref) {\n  const labelColor = hasError ? 'red' : 'text-brown-100';\n  const inputClassName = `\n  mt-1 block w-full px-3 py-2 bg-white border border-brown rounded-md text-sm shadow-sm placeholder-grey\n  focus:outline-none focus:border-brown-300 focus:ring-1 focus:ring-brown-300\n  disabled:bg-cream disabled:text-cream disabled:border-brown-200 disabled:shadow-none\n  invalid:border-red invalid:text-red\n  focus:invalid:red focus:invalid:red\n`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [label ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${labelColor} font-small`,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: placeholder,\n      className: inputClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n});\n_c2 = TextField;\nexport default TextField;\nvar _c, _c2;\n$RefreshReg$(_c, \"TextField$forwardRef\");\n$RefreshReg$(_c2, \"TextField\");","map":{"version":3,"names":["forwardRef","jsxDEV","_jsxDEV","TextField","_c","label","placeholder","hasError","ref","labelColor","inputClassName","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","_c2","$RefreshReg$"],"sources":["/Users/leeyangie/Desktop/BiteNest/bitenest/src/components/shared/TextField.tsx"],"sourcesContent":["import { forwardRef, InputHTMLAttributes } from 'react'\n\ninterface TextFieldProps extends InputHTMLAttributes<HTMLInputElement> {\n  label?: React.ReactNode\n  hasError?: boolean\n  helpMessage?: React.ReactNode\n}\n\nconst TextField = forwardRef<HTMLInputElement, TextFieldProps>(\n  function TextField({ label, placeholder, hasError }, ref) {\n    const labelColor = hasError ? 'red' : 'text-brown-100'\n    const inputClassName = `\n  mt-1 block w-full px-3 py-2 bg-white border border-brown rounded-md text-sm shadow-sm placeholder-grey\n  focus:outline-none focus:border-brown-300 focus:ring-1 focus:ring-brown-300\n  disabled:bg-cream disabled:text-cream disabled:border-brown-200 disabled:shadow-none\n  invalid:border-red invalid:text-red\n  focus:invalid:red focus:invalid:red\n`\n    return (\n      <div>\n        {label ? (\n          <div className={`${labelColor} font-small`}>{label}</div>\n        ) : null}\n        <input\n          type=\"text\"\n          placeholder={placeholder}\n          className={inputClassName}\n        />\n      </div>\n    )\n  },\n)\n\nexport default TextField\n"],"mappings":";AAAA,SAASA,UAAU,QAA6B,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQvD,MAAMC,SAAS,gBAAGH,UAAU,CAAAI,EAAA,GAC1B,SAASD,SAASA,CAAC;EAAEE,KAAK;EAAEC,WAAW;EAAEC;AAAS,CAAC,EAAEC,GAAG,EAAE;EACxD,MAAMC,UAAU,GAAGF,QAAQ,GAAG,KAAK,GAAG,gBAAgB;EACtD,MAAMG,cAAc,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;EACG,oBACER,OAAA;IAAAS,QAAA,GACGN,KAAK,gBACJH,OAAA;MAAKU,SAAS,EAAE,GAAGH,UAAU,aAAc;MAAAE,QAAA,EAAEN;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GACvD,IAAI,eACRd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXX,WAAW,EAAEA,WAAY;MACzBM,SAAS,EAAEF;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CACF,CAAC;AAAAE,GAAA,GAvBKf,SAAS;AAyBf,eAAeA,SAAS;AAAA,IAAAC,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}