{"ast":null,"code":"var _jsxFileName = \"/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/pages/mypage/Fridge.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport IngredientItem from '@/components/fridge/shared/ingredientItem';\nimport useUser from '@hooks/auth/useUser';\nimport Button from '@/components/shared/Button';\nimport Modal from '@shared/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FridgePage() {\n  _s();\n  const {\n    user\n  } = useUser();\n  const [ingredients, setIngredients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태\n\n  useEffect(() => {\n    if (user && user.id) {\n      axios.get(`https://3ccfb3c6-7a46-4902-b117-a23e940861d2.mock.pstmn.io/api/fridge-ingredients`, {\n        params: {\n          userId: user.id\n        }\n      }).then(response => {\n        setIngredients(response.data);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      });\n    }\n  }, [user]);\n  const handleOpenModal = () => {\n    setIsModalOpen(true); // 모달 열기\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false); // 모달 닫기\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative h-full w-full min-h-[600px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        label: \"\\uC7AC\\uB8CC \\uB4F1\\uB85D\\uD558\\uAE30\",\n        onClick: handleOpenModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-4\",\n      children: ingredients.length > 0 ? ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(IngredientItem, {\n        ingredient: ingredient\n      }, ingredient.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uB0C9\\uC7A5\\uACE0\\uC5D0 \\uC800\\uC7A5\\uB41C \\uC7AC\\uB8CC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute w-full bottom-1\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        label: \"\\uB098\\uC758 \\uB9DE\\uCDA4 \\uB808\\uC2DC\\uD53C\",\n        size: \"full\",\n        color: \"bg-green-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold\",\n        children: \"\\uC7AC\\uB8CC \\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC5EC\\uAE30\\uC5D0 \\uC7AC\\uB8CC\\uB97C \\uB4F1\\uB85D\\uD558\\uB294 \\uD3FC\\uC744 \\uCD94\\uAC00\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(FridgePage, \"b7Tq5A7vDb5BKmonOSwms3Ie/sI=\", false, function () {\n  return [useUser];\n});\n_c = FridgePage;\nexport default FridgePage;\nvar _c;\n$RefreshReg$(_c, \"FridgePage\");","map":{"version":3,"names":["useEffect","useState","axios","IngredientItem","useUser","Button","Modal","jsxDEV","_jsxDEV","FridgePage","_s","user","ingredients","setIngredients","loading","setLoading","isModalOpen","setIsModalOpen","id","get","params","userId","then","response","data","catch","error","console","handleOpenModal","handleCloseModal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","label","onClick","length","map","ingredient","size","color","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/pages/mypage/Fridge.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Ingredient } from '@models/ingredient'\nimport IngredientItem from '@/components/fridge/shared/ingredientItem'\nimport useUser from '@hooks/auth/useUser'\nimport Button from '@/components/shared/Button'\nimport Modal from '@shared/Modal'\n\nfunction FridgePage() {\n  const { user } = useUser()\n  const [ingredients, setIngredients] = useState<Ingredient[]>([])\n  const [loading, setLoading] = useState<boolean>(true)\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false) // 모달 상태\n\n  useEffect(() => {\n    if (user && user.id) {\n      axios\n        .get(\n          `https://3ccfb3c6-7a46-4902-b117-a23e940861d2.mock.pstmn.io/api/fridge-ingredients`,\n          {\n            params: { userId: user.id },\n          },\n        )\n        .then((response) => {\n          setIngredients(response.data)\n          setLoading(false)\n        })\n        .catch((error) => {\n          console.error('Error fetching data:', error)\n          setLoading(false)\n        })\n    }\n  }, [user])\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true) // 모달 열기\n  }\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false) // 모달 닫기\n  }\n\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <div className=\"relative h-full w-full min-h-[600px]\">\n      <div>\n        <Button label=\"재료 등록하기\" onClick={handleOpenModal}></Button>{' '}\n        {/* 모달 열기 */}\n      </div>\n      <div className=\"grid grid-cols-1 gap-4\">\n        {ingredients.length > 0 ? (\n          ingredients.map((ingredient) => (\n            <IngredientItem key={ingredient.id} ingredient={ingredient} />\n          ))\n        ) : (\n          <div>냉장고에 저장된 재료가 없습니다.</div>\n        )}\n      </div>\n      <div className=\"absolute w-full bottom-1\">\n        <Button\n          label=\"나의 맞춤 레시피\"\n          size=\"full\"\n          color=\"bg-green-100\"\n        ></Button>\n      </div>\n\n      {/* 모달 */}\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n        <h2 className=\"text-lg font-bold\">재료 등록</h2>\n        <p>여기에 재료를 등록하는 폼을 추가하세요.</p>\n      </Modal>\n    </div>\n  )\n}\n\nexport default FridgePage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}