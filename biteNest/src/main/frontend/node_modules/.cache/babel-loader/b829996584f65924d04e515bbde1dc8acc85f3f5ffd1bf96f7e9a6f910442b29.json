{"ast":null,"code":"var __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { RequestHandler } from './RequestHandler.mjs';\nimport { getTimestamp } from '../utils/logging/getTimestamp.mjs';\nimport { getStatusCodeColor } from '../utils/logging/getStatusCodeColor.mjs';\nimport { serializeRequest } from '../utils/logging/serializeRequest.mjs';\nimport { serializeResponse } from '../utils/logging/serializeResponse.mjs';\nimport { matchRequestUrl } from '../utils/matching/matchRequestUrl.mjs';\nimport { parseGraphQLRequest, parseDocumentNode } from '../utils/internal/parseGraphQLRequest.mjs';\nimport { getPublicUrlFromRequest } from '../utils/request/getPublicUrlFromRequest.mjs';\nimport { devUtils } from '../utils/internal/devUtils.mjs';\nfunction isDocumentNode(value) {\n  if (value == null) {\n    return false;\n  }\n  return typeof value === \"object\" && \"kind\" in value && \"definitions\" in value;\n}\nclass GraphQLHandler extends RequestHandler {\n  constructor(operationType, operationName, endpoint, resolver, options) {\n    let resolvedOperationName = operationName;\n    if (isDocumentNode(operationName)) {\n      const parsedNode = parseDocumentNode(operationName);\n      if (parsedNode.operationType !== operationType) {\n        throw new Error(`Failed to create a GraphQL handler: provided a DocumentNode with a mismatched operation type (expected \"${operationType}\", but got \"${parsedNode.operationType}\").`);\n      }\n      if (!parsedNode.operationName) {\n        throw new Error(`Failed to create a GraphQL handler: provided a DocumentNode with no operation name.`);\n      }\n      resolvedOperationName = parsedNode.operationName;\n    }\n    const header = operationType === \"all\" ? `${operationType} (origin: ${endpoint.toString()})` : `${operationType} ${resolvedOperationName} (origin: ${endpoint.toString()})`;\n    super({\n      info: {\n        header,\n        operationType,\n        operationName: resolvedOperationName\n      },\n      resolver,\n      options\n    });\n    this.endpoint = endpoint;\n  }\n  parse(args) {\n    return __async(this, null, function* () {\n      return parseGraphQLRequest(args.request).catch(error => {\n        console.error(error);\n        return void 0;\n      });\n    });\n  }\n  predicate(args) {\n    if (!args.parsedResult) {\n      return false;\n    }\n    if (!args.parsedResult.operationName && this.info.operationType !== \"all\") {\n      const publicUrl = getPublicUrlFromRequest(args.request);\n      devUtils.warn(`Failed to intercept a GraphQL request at \"${args.request.method} ${publicUrl}\": anonymous GraphQL operations are not supported.\n\nConsider naming this operation or using \"graphql.operation()\" request handler to intercept GraphQL requests regardless of their operation name/type. Read more: https://mswjs.io/docs/api/graphql/operation`);\n      return false;\n    }\n    const hasMatchingUrl = matchRequestUrl(new URL(args.request.url), this.endpoint);\n    const hasMatchingOperationType = this.info.operationType === \"all\" || args.parsedResult.operationType === this.info.operationType;\n    const hasMatchingOperationName = this.info.operationName instanceof RegExp ? this.info.operationName.test(args.parsedResult.operationName || \"\") : args.parsedResult.operationName === this.info.operationName;\n    return hasMatchingUrl.matches && hasMatchingOperationType && hasMatchingOperationName;\n  }\n  extendResolverArgs(args) {\n    var _a, _b, _c;\n    return {\n      query: ((_a = args.parsedResult) == null ? void 0 : _a.query) || \"\",\n      operationName: ((_b = args.parsedResult) == null ? void 0 : _b.operationName) || \"\",\n      variables: ((_c = args.parsedResult) == null ? void 0 : _c.variables) || {}\n    };\n  }\n  log(args) {\n    return __async(this, null, function* () {\n      var _a, _b, _c, _d;\n      const loggedRequest = yield serializeRequest(args.request);\n      const loggedResponse = yield serializeResponse(args.response);\n      const statusColor = getStatusCodeColor(loggedResponse.status);\n      const requestInfo = ((_a = args.parsedResult) == null ? void 0 : _a.operationName) ? `${(_b = args.parsedResult) == null ? void 0 : _b.operationType} ${(_c = args.parsedResult) == null ? void 0 : _c.operationName}` : `anonymous ${(_d = args.parsedResult) == null ? void 0 : _d.operationType}`;\n      console.groupCollapsed(devUtils.formatMessage(\"%s %s (%c%s%c)\"), getTimestamp(), `${requestInfo}`, `color:${statusColor}`, `${loggedResponse.status} ${loggedResponse.statusText}`, \"color:inherit\");\n      console.log(\"Request:\", loggedRequest);\n      console.log(\"Handler:\", this);\n      console.log(\"Response:\", loggedResponse);\n      console.groupEnd();\n    });\n  }\n}\nexport { GraphQLHandler, isDocumentNode };","map":{"version":3,"names":["__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","throw","x","done","then","apply","RequestHandler","getTimestamp","getStatusCodeColor","serializeRequest","serializeResponse","matchRequestUrl","parseGraphQLRequest","parseDocumentNode","getPublicUrlFromRequest","devUtils","isDocumentNode","GraphQLHandler","constructor","operationType","operationName","endpoint","resolver","options","resolvedOperationName","parsedNode","Error","header","toString","info","parse","args","request","catch","error","console","predicate","parsedResult","publicUrl","warn","method","hasMatchingUrl","URL","url","hasMatchingOperationType","hasMatchingOperationName","RegExp","test","matches","extendResolverArgs","_a","_b","_c","query","variables","log","_d","loggedRequest","loggedResponse","response","statusColor","status","requestInfo","groupCollapsed","formatMessage","statusText","groupEnd"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/.yarn/unplugged/msw-virtual-7370ac2e06/node_modules/msw/lib/core/handlers/GraphQLHandler.mjs"],"sourcesContent":["var __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport {\n  RequestHandler\n} from './RequestHandler.mjs';\nimport { getTimestamp } from '../utils/logging/getTimestamp.mjs';\nimport { getStatusCodeColor } from '../utils/logging/getStatusCodeColor.mjs';\nimport { serializeRequest } from '../utils/logging/serializeRequest.mjs';\nimport { serializeResponse } from '../utils/logging/serializeResponse.mjs';\nimport { matchRequestUrl } from '../utils/matching/matchRequestUrl.mjs';\nimport {\n  parseGraphQLRequest,\n  parseDocumentNode\n} from '../utils/internal/parseGraphQLRequest.mjs';\nimport { getPublicUrlFromRequest } from '../utils/request/getPublicUrlFromRequest.mjs';\nimport { devUtils } from '../utils/internal/devUtils.mjs';\nfunction isDocumentNode(value) {\n  if (value == null) {\n    return false;\n  }\n  return typeof value === \"object\" && \"kind\" in value && \"definitions\" in value;\n}\nclass GraphQLHandler extends RequestHandler {\n  constructor(operationType, operationName, endpoint, resolver, options) {\n    let resolvedOperationName = operationName;\n    if (isDocumentNode(operationName)) {\n      const parsedNode = parseDocumentNode(operationName);\n      if (parsedNode.operationType !== operationType) {\n        throw new Error(\n          `Failed to create a GraphQL handler: provided a DocumentNode with a mismatched operation type (expected \"${operationType}\", but got \"${parsedNode.operationType}\").`\n        );\n      }\n      if (!parsedNode.operationName) {\n        throw new Error(\n          `Failed to create a GraphQL handler: provided a DocumentNode with no operation name.`\n        );\n      }\n      resolvedOperationName = parsedNode.operationName;\n    }\n    const header = operationType === \"all\" ? `${operationType} (origin: ${endpoint.toString()})` : `${operationType} ${resolvedOperationName} (origin: ${endpoint.toString()})`;\n    super({\n      info: {\n        header,\n        operationType,\n        operationName: resolvedOperationName\n      },\n      resolver,\n      options\n    });\n    this.endpoint = endpoint;\n  }\n  parse(args) {\n    return __async(this, null, function* () {\n      return parseGraphQLRequest(args.request).catch((error) => {\n        console.error(error);\n        return void 0;\n      });\n    });\n  }\n  predicate(args) {\n    if (!args.parsedResult) {\n      return false;\n    }\n    if (!args.parsedResult.operationName && this.info.operationType !== \"all\") {\n      const publicUrl = getPublicUrlFromRequest(args.request);\n      devUtils.warn(`Failed to intercept a GraphQL request at \"${args.request.method} ${publicUrl}\": anonymous GraphQL operations are not supported.\n\nConsider naming this operation or using \"graphql.operation()\" request handler to intercept GraphQL requests regardless of their operation name/type. Read more: https://mswjs.io/docs/api/graphql/operation`);\n      return false;\n    }\n    const hasMatchingUrl = matchRequestUrl(\n      new URL(args.request.url),\n      this.endpoint\n    );\n    const hasMatchingOperationType = this.info.operationType === \"all\" || args.parsedResult.operationType === this.info.operationType;\n    const hasMatchingOperationName = this.info.operationName instanceof RegExp ? this.info.operationName.test(args.parsedResult.operationName || \"\") : args.parsedResult.operationName === this.info.operationName;\n    return hasMatchingUrl.matches && hasMatchingOperationType && hasMatchingOperationName;\n  }\n  extendResolverArgs(args) {\n    var _a, _b, _c;\n    return {\n      query: ((_a = args.parsedResult) == null ? void 0 : _a.query) || \"\",\n      operationName: ((_b = args.parsedResult) == null ? void 0 : _b.operationName) || \"\",\n      variables: ((_c = args.parsedResult) == null ? void 0 : _c.variables) || {}\n    };\n  }\n  log(args) {\n    return __async(this, null, function* () {\n      var _a, _b, _c, _d;\n      const loggedRequest = yield serializeRequest(args.request);\n      const loggedResponse = yield serializeResponse(args.response);\n      const statusColor = getStatusCodeColor(loggedResponse.status);\n      const requestInfo = ((_a = args.parsedResult) == null ? void 0 : _a.operationName) ? `${(_b = args.parsedResult) == null ? void 0 : _b.operationType} ${(_c = args.parsedResult) == null ? void 0 : _c.operationName}` : `anonymous ${(_d = args.parsedResult) == null ? void 0 : _d.operationType}`;\n      console.groupCollapsed(\n        devUtils.formatMessage(\"%s %s (%c%s%c)\"),\n        getTimestamp(),\n        `${requestInfo}`,\n        `color:${statusColor}`,\n        `${loggedResponse.status} ${loggedResponse.statusText}`,\n        \"color:inherit\"\n      );\n      console.log(\"Request:\", loggedRequest);\n      console.log(\"Handler:\", this);\n      console.log(\"Response:\", loggedResponse);\n      console.groupEnd();\n    });\n  }\n}\nexport {\n  GraphQLHandler,\n  isDocumentNode\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}