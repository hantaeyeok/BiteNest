{"ast":null,"code":"var _jsxFileName = \"/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/pages/Signin.tsx\",\n  _s = $RefreshSig$();\nimport instance from '@util/axios';\nimport Form from '@components/signin/Form';\nimport { useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useUser from '@hooks/auth/useUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SigninPage() {\n  _s();\n  const navigate = useNavigate(); // 리다이렉션을 위한 훅\n  const {\n    setUser\n  } = useUser();\n  const handleSubmit = useCallback(async formValues => {\n    try {\n      const response = await instance.post('https://3ccfb3c6-7a46-4902-b117-a23e940861d2.mock.pstmn.io/api/login', formValues);\n      console.log('로그인 성공:', response.data);\n\n      // 토큰을 localStorage에 저장\n      const {\n        token,\n        email,\n        nickName,\n        id\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('email', email);\n      localStorage.setItem('nickName', nickName);\n      lo;\n      setUser({\n        email,\n        nickName,\n        token,\n        id\n      });\n\n      // 로그인 성공 후 리다이렉션 (예: 대시보드로 이동)\n      navigate('/'); // 원하는 경로로 리다이렉션\n    } catch (error) {\n      console.error('로그인 실패:', error);\n      alert('로그인 실패. 아이디 또는 비밀번호를 확인해주세요');\n    }\n  }, [navigate, setUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(SigninPage, \"jELG72VO23/osSlEbPw3/lot2e8=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = SigninPage;\nexport default SigninPage;\nvar _c;\n$RefreshReg$(_c, \"SigninPage\");","map":{"version":3,"names":["instance","Form","useCallback","useNavigate","useUser","jsxDEV","_jsxDEV","SigninPage","_s","navigate","setUser","handleSubmit","formValues","response","post","console","log","data","token","email","nickName","id","localStorage","setItem","lo","error","alert","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/pages/Signin.tsx"],"sourcesContent":["import instance from '@util/axios'\nimport { FormValues } from '@/models/signin'\nimport Form from '@components/signin/Form'\nimport { useCallback } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport useUser from '@hooks/auth/useUser'\n\nfunction SigninPage() {\n  const navigate = useNavigate() // 리다이렉션을 위한 훅\n  const { setUser } = useUser()\n\n  const handleSubmit = useCallback(\n    async (formValues: FormValues) => {\n      try {\n        const response = await instance.post(\n          'https://3ccfb3c6-7a46-4902-b117-a23e940861d2.mock.pstmn.io/api/login',\n          formValues,\n        )\n        console.log('로그인 성공:', response.data)\n\n        // 토큰을 localStorage에 저장\n        const { token, email, nickName, id } = response.data\n        localStorage.setItem('token', token)\n        localStorage.setItem('email', email)\n        localStorage.setItem('nickName', nickName)\n        lo\n\n        setUser({ email, nickName, token, id })\n\n        // 로그인 성공 후 리다이렉션 (예: 대시보드로 이동)\n        navigate('/') // 원하는 경로로 리다이렉션\n      } catch (error) {\n        console.error('로그인 실패:', error)\n        alert('로그인 실패. 아이디 또는 비밀번호를 확인해주세요')\n      }\n    },\n    [navigate, setUser],\n  )\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit} />\n    </div>\n  )\n}\n\nexport default SigninPage\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,aAAa;AAElC,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC,EAAC;EAC/B,MAAM;IAAEO;EAAQ,CAAC,GAAGN,OAAO,CAAC,CAAC;EAE7B,MAAMO,YAAY,GAAGT,WAAW,CAC9B,MAAOU,UAAsB,IAAK;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAClC,sEAAsE,EACtEF,UACF,CAAC;MACDG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,QAAQ,CAACI,IAAI,CAAC;;MAErC;MACA,MAAM;QAAEC,KAAK;QAAEC,KAAK;QAAEC,QAAQ;QAAEC;MAAG,CAAC,GAAGR,QAAQ,CAACI,IAAI;MACpDK,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;MACpCI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;MACpCG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAAC;MAC1CI,EAAE;MAEFd,OAAO,CAAC;QAAES,KAAK;QAAEC,QAAQ;QAAEF,KAAK;QAAEG;MAAG,CAAC,CAAC;;MAEvC;MACAZ,QAAQ,CAAC,GAAG,CAAC,EAAC;IAChB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/BC,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC,EACD,CAACjB,QAAQ,EAAEC,OAAO,CACpB,CAAC;EAED,oBACEJ,OAAA;IAAAqB,QAAA,eACErB,OAAA,CAACL,IAAI;MAAC2B,QAAQ,EAAEjB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAACxB,EAAA,CArCQD,UAAU;EAAA,QACAJ,WAAW,EACRC,OAAO;AAAA;AAAA6B,EAAA,GAFpB1B,UAAU;AAuCnB,eAAeA,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}