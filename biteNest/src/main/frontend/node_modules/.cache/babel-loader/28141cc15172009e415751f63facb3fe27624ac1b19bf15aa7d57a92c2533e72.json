{"ast":null,"code":"var _jsxFileName = \"/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/components/auth/PrivateRoute.tsx\",\n  _s = $RefreshSig$();\nimport { Navigate } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport { userAtom } from '@atoms/user';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const user = useRecoilValue(userAtom);\n  useEffect(() => {\n    if (!user || !user.token) {\n      // 로그인되지 않은 상태일 때 경고 메시지 출력\n      alert('로그인이 필요합니다. 로그인 페이지로 이동합니다.');\n    }\n  }, [user]);\n  if (!user || !user.token) {\n    // 경고 메시지 후 로그인 페이지로 리다이렉트\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/signin\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 유저가 인증된 상태에서만 자식 컴포넌트를 렌더링\n  return children;\n};\n_s(PrivateRoute, \"mFREt0EDMLXjjVBQ0jJjGKAdd/I=\", false, function () {\n  return [useRecoilValue];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Navigate","useRecoilValue","userAtom","useEffect","jsxDEV","_jsxDEV","PrivateRoute","children","_s","user","token","alert","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/components/auth/PrivateRoute.tsx"],"sourcesContent":["import { Navigate } from 'react-router-dom'\nimport { useRecoilValue } from 'recoil'\nimport { userAtom } from '@atoms/user'\nimport { useEffect } from 'react'\n\ninterface PrivateRouteProps {\n  children: JSX.Element\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children }) => {\n  const user = useRecoilValue(userAtom)\n\n  useEffect(() => {\n    if (!user || !user.token) {\n      // 로그인되지 않은 상태일 때 경고 메시지 출력\n      alert('로그인이 필요합니다. 로그인 페이지로 이동합니다.')\n    }\n  }, [user])\n\n  if (!user || !user.token) {\n    // 경고 메시지 후 로그인 페이지로 리다이렉트\n    return <Navigate to=\"/signin\" replace />\n  }\n\n  // 유저가 인증된 상태에서만 자식 컴포넌트를 렌더링\n  return children\n}\n\nexport default PrivateRoute\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMjC,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAMC,IAAI,GAAGR,cAAc,CAACC,QAAQ,CAAC;EAErCC,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,IAAI,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;MACxB;MACAC,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;EAEV,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;IACxB;IACA,oBAAOL,OAAA,CAACL,QAAQ;MAACY,EAAE,EAAC,SAAS;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1C;;EAEA;EACA,OAAOV,QAAQ;AACjB,CAAC;AAAAC,EAAA,CAjBKF,YAAyC;EAAA,QAChCL,cAAc;AAAA;AAAAiB,EAAA,GADvBZ,YAAyC;AAmB/C,eAAeA,YAAY;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}