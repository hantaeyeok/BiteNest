{"ast":null,"code":"var _jsxFileName = \"/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/components/fridge/FridgeForm.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport instance from '@/util/axios';\nimport Button from '../shared/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FridgeForm() {\n  _s();\n  const [ingredients, setIngredients] = useState([]);\n  const [selectedIngredients, setSelectedIngredients] = useState([]); // 선택된 재료 상태\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태\n  const [displayedIngredients, setDisplayedIngredients] = useState([]); // 화면에 표시되는 재료\n  const [page, setPage] = useState(1); // 페이지 관리 (무한 스크롤)\n  const pageSize = 20; // 한 번에 보여줄 재료 수\n\n  useEffect(() => {\n    instance.get('https://3ccfb3c6-7a46-4902-b117-a23e940861d2.mock.pstmn.io/api/new-ingredients').then(response => {\n      setIngredients(response.data);\n      setDisplayedIngredients(response.data.slice(0, pageSize)); // 처음에 일부 데이터만 보여줌\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setLoading(false);\n    });\n  }, []);\n  const handleSearch = () => {\n    const filtered = ingredients.filter(ingredient => ingredient.name.includes(searchTerm));\n    setDisplayedIngredients(filtered.slice(0, pageSize)); // 검색된 재료만 표시\n    setPage(1); // 검색 시 페이지를 1로 초기화\n  };\n  const handleSelect = ingredient => {\n    const isSelected = selectedIngredients.some(item => item.id === ingredient.id);\n    if (isSelected) {\n      setSelectedIngredients(selectedIngredients.filter(item => item.id !== ingredient.id)); // 선택 해제\n    } else {\n      setSelectedIngredients([...selectedIngredients, ingredient]); // 선택 추가\n    }\n  };\n  const handleScroll = e => {\n    const bottom = e.currentTarget.scrollHeight - e.currentTarget.scrollTop === e.currentTarget.clientHeight;\n    if (bottom && displayedIngredients.length < ingredients.length) {\n      const nextPage = page + 1;\n      const newIngredients = ingredients.slice(0, nextPage * pageSize);\n      setDisplayedIngredients(newIngredients);\n      setPage(nextPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center \",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uC7AC\\uB8CC\\uBA85\\uC744 \\uC785\\uB825\\uD574 \\uAC80\\uC0C9\\uD574\\uBCF4\\uC138\\uC694\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value) // 검색어 입력 상태 업데이트\n        ,\n        className: \"w-3/4 h-10 border border-brown-100 p-2 m-2 rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"\\uAC80\\uC0C9\",\n        onClick: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 justify-center items-center mb-4\",\n      children: selectedIngredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-300 text-white p-2 rounded-lg cursor-pointer flex items-center\",\n        onClick: () => handleSelect(ingredient),\n        children: [ingredient.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 31\n        }, this), ' ']\n      }, ingredient.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-2 overflow-auto max-h-96\",\n      onScroll: handleScroll // 무한 스크롤 이벤트 핸들러\n      ,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : displayedIngredients.length > 0 ? displayedIngredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 border rounded-lg cursor-pointer ${selectedIngredients.some(item => item.id === ingredient.id) ? 'bg-brown-500 text-white' : 'bg-white text-brown-500'}`,\n        onClick: () => handleSelect(ingredient),\n        children: ingredient.name\n      }, ingredient.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        label: `총 ${selectedIngredients.length}개의 재료 추가`,\n        size: \"full\",\n        color: \"bg-green-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(FridgeForm, \"nlWCOwBto+Kjy9xkcMdUT8LKIBY=\");\n_c = FridgeForm;\nexport default FridgeForm;\nvar _c;\n$RefreshReg$(_c, \"FridgeForm\");","map":{"version":3,"names":["useEffect","useState","instance","Button","jsxDEV","_jsxDEV","FridgeForm","_s","ingredients","setIngredients","selectedIngredients","setSelectedIngredients","loading","setLoading","searchTerm","setSearchTerm","displayedIngredients","setDisplayedIngredients","page","setPage","pageSize","get","then","response","data","slice","catch","error","console","handleSearch","filtered","filter","ingredient","name","includes","handleSelect","isSelected","some","item","id","handleScroll","e","bottom","currentTarget","scrollHeight","scrollTop","clientHeight","length","nextPage","newIngredients","children","className","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","label","onClick","map","onScroll","size","color","_c","$RefreshReg$"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/components/fridge/FridgeForm.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport instance from '@/util/axios'\nimport Button from '../shared/Button'\nimport { Ingredient } from '@models/ingredient'\n\nfunction FridgeForm() {\n  const [ingredients, setIngredients] = useState<Ingredient[]>([])\n  const [selectedIngredients, setSelectedIngredients] = useState<Ingredient[]>(\n    [],\n  ) // 선택된 재료 상태\n  const [loading, setLoading] = useState<boolean>(true)\n  const [searchTerm, setSearchTerm] = useState<string>('') // 검색어 상태\n  const [displayedIngredients, setDisplayedIngredients] = useState<\n    Ingredient[]\n  >([]) // 화면에 표시되는 재료\n  const [page, setPage] = useState<number>(1) // 페이지 관리 (무한 스크롤)\n  const pageSize = 20 // 한 번에 보여줄 재료 수\n\n  useEffect(() => {\n    instance\n      .get(\n        'https://3ccfb3c6-7a46-4902-b117-a23e940861d2.mock.pstmn.io/api/new-ingredients',\n      )\n      .then((response) => {\n        setIngredients(response.data)\n        setDisplayedIngredients(response.data.slice(0, pageSize)) // 처음에 일부 데이터만 보여줌\n        setLoading(false)\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error)\n        setLoading(false)\n      })\n  }, [])\n\n  const handleSearch = () => {\n    const filtered = ingredients.filter((ingredient) =>\n      ingredient.name.includes(searchTerm),\n    )\n    setDisplayedIngredients(filtered.slice(0, pageSize)) // 검색된 재료만 표시\n    setPage(1) // 검색 시 페이지를 1로 초기화\n  }\n\n  const handleSelect = (ingredient: Ingredient) => {\n    const isSelected = selectedIngredients.some(\n      (item) => item.id === ingredient.id,\n    )\n    if (isSelected) {\n      setSelectedIngredients(\n        selectedIngredients.filter((item) => item.id !== ingredient.id),\n      ) // 선택 해제\n    } else {\n      setSelectedIngredients([...selectedIngredients, ingredient]) // 선택 추가\n    }\n  }\n\n  const handleScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    const bottom =\n      e.currentTarget.scrollHeight - e.currentTarget.scrollTop ===\n      e.currentTarget.clientHeight\n    if (bottom && displayedIngredients.length < ingredients.length) {\n      const nextPage = page + 1\n      const newIngredients = ingredients.slice(0, nextPage * pageSize)\n      setDisplayedIngredients(newIngredients)\n      setPage(nextPage)\n    }\n  }\n\n  return (\n    <div>\n      {/* 검색 필드 */}\n      <div className=\"flex justify-center items-center \">\n        <input\n          placeholder=\"재료명을 입력해 검색해보세요\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)} // 검색어 입력 상태 업데이트\n          className=\"w-3/4 h-10 border border-brown-100 p-2 m-2 rounded-lg\"\n        />\n        <Button label=\"검색\" onClick={handleSearch} /> {/* 검색 버튼 */}\n      </div>\n\n      {/* 선택된 재료 */}\n      <div className=\"flex gap-2 justify-center items-center mb-4\">\n        {selectedIngredients.map((ingredient) => (\n          <div\n            key={ingredient.id}\n            className=\"bg-green-300 text-white p-2 rounded-lg cursor-pointer flex items-center\"\n            onClick={() => handleSelect(ingredient)}\n          >\n            {ingredient.name} <span className=\"ml-2\">X</span>{' '}\n            {/* 선택 해제 버튼 */}\n          </div>\n        ))}\n      </div>\n\n      {/* 재료 목록 */}\n      <div\n        className=\"grid grid-cols-3 gap-2 overflow-auto max-h-96\"\n        onScroll={handleScroll} // 무한 스크롤 이벤트 핸들러\n      >\n        {loading ? (\n          <div>로딩 중...</div>\n        ) : displayedIngredients.length > 0 ? (\n          displayedIngredients.map((ingredient) => (\n            <div\n              key={ingredient.id}\n              className={`p-2 border rounded-lg cursor-pointer ${\n                selectedIngredients.some((item) => item.id === ingredient.id)\n                  ? 'bg-brown-500 text-white'\n                  : 'bg-white text-brown-500'\n              }`}\n              onClick={() => handleSelect(ingredient)}\n            >\n              {ingredient.name}\n            </div>\n          ))\n        ) : (\n          <div>검색 결과가 없습니다.</div>\n        )}\n      </div>\n\n      {/* 선택한 재료 개수 및 추가 버튼 */}\n      <div className=\"flex justify-center mt-4\">\n        <Button\n          label={`총 ${selectedIngredients.length}개의 재료 추가`}\n          size=\"full\"\n          color=\"bg-green-300\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default FridgeForm\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}