{"ast":null,"code":"var _jsxFileName = \"/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/pages/Signin.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport instance from '@util/axios';\nimport Form from '@components/signin/Form';\nimport useUser from '@hooks/auth/useUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SigninPage() {\n  _s();\n  var _location$state, _location$state$from;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    setUser\n  } = useUser();\n\n  // 사용자가 로그인 전에 접근하려던 페이지 (state로부터 가져옴)\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || '/';\n  const handleSubmit = useCallback(async formValues => {\n    console.log('formvalue', formValues);\n    try {\n      const response = await instance.post('https://3ccfb3c6-7a46-4902-b117-a23e940861d2.mock.pstmn.io/api/login', formValues);\n      console.log('로그인 성공:', response.data);\n\n      // 토큰을 localStorage에 저장\n      const {\n        token,\n        email,\n        nickName,\n        id\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('email', email);\n      localStorage.setItem('nickName', nickName);\n      localStorage.setItem('id', id);\n      setUser({\n        email,\n        nickName,\n        token,\n        id\n      });\n\n      // 로그인 후 사용자가 가려고 했던 경로로 리다이렉션\n      navigate(from, {\n        replace: true\n      });\n    } catch (error) {\n      console.error('로그인 실패:', error);\n      alert('로그인 실패. 아이디 또는 비밀번호를 확인해주세요');\n    }\n  }, [navigate, from, setUser] // from 경로도 의존성에 추가\n  );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(SigninPage, \"GbD1vZ9t01O6CCcZ/qtPG1HGGOY=\", false, function () {\n  return [useNavigate, useLocation, useUser];\n});\n_c = SigninPage;\nexport default SigninPage;\nvar _c;\n$RefreshReg$(_c, \"SigninPage\");","map":{"version":3,"names":["useCallback","useNavigate","useLocation","instance","Form","useUser","jsxDEV","_jsxDEV","SigninPage","_s","_location$state","_location$state$from","navigate","location","setUser","from","state","pathname","handleSubmit","formValues","console","log","response","post","data","token","email","nickName","id","localStorage","setItem","replace","error","alert","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/pages/Signin.tsx"],"sourcesContent":["import { useCallback } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport instance from '@util/axios'\nimport { FormValues } from '@/models/signin'\nimport Form from '@components/signin/Form'\nimport useUser from '@hooks/auth/useUser'\n\nfunction SigninPage() {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const { setUser } = useUser()\n\n  // 사용자가 로그인 전에 접근하려던 페이지 (state로부터 가져옴)\n  const from = location.state?.from?.pathname || '/'\n\n  const handleSubmit = useCallback(\n    async (formValues: FormValues) => {\n      console.log('formvalue', formValues)\n      try {\n        const response = await instance.post(\n          'https://3ccfb3c6-7a46-4902-b117-a23e940861d2.mock.pstmn.io/api/login',\n          formValues,\n        )\n        console.log('로그인 성공:', response.data)\n\n        // 토큰을 localStorage에 저장\n        const { token, email, nickName, id } = response.data\n        localStorage.setItem('token', token)\n        localStorage.setItem('email', email)\n        localStorage.setItem('nickName', nickName)\n        localStorage.setItem('id', id)\n\n        setUser({ email, nickName, token, id })\n\n        // 로그인 후 사용자가 가려고 했던 경로로 리다이렉션\n        navigate(from, { replace: true })\n      } catch (error) {\n        console.error('로그인 실패:', error)\n        alert('로그인 실패. 아이디 또는 비밀번호를 확인해주세요')\n      }\n    },\n    [navigate, from, setUser], // from 경로도 의존성에 추가\n  )\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit} />\n    </div>\n  )\n}\n\nexport default SigninPage\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,QAAQ,MAAM,aAAa;AAElC,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,OAAO,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,oBAAA;EACpB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY;EAAQ,CAAC,GAAGT,OAAO,CAAC,CAAC;;EAE7B;EACA,MAAMU,IAAI,GAAG,EAAAL,eAAA,GAAAG,QAAQ,CAACG,KAAK,cAAAN,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBK,IAAI,cAAAJ,oBAAA,uBAApBA,oBAAA,CAAsBM,QAAQ,KAAI,GAAG;EAElD,MAAMC,YAAY,GAAGlB,WAAW,CAC9B,MAAOmB,UAAsB,IAAK;IAChCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,UAAU,CAAC;IACpC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMnB,QAAQ,CAACoB,IAAI,CAClC,sEAAsE,EACtEJ,UACF,CAAC;MACDC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,QAAQ,CAACE,IAAI,CAAC;;MAErC;MACA,MAAM;QAAEC,KAAK;QAAEC,KAAK;QAAEC,QAAQ;QAAEC;MAAG,CAAC,GAAGN,QAAQ,CAACE,IAAI;MACpDK,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;MACpCI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;MACpCG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAAC;MAC1CE,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEF,EAAE,CAAC;MAE9Bd,OAAO,CAAC;QAAEY,KAAK;QAAEC,QAAQ;QAAEF,KAAK;QAAEG;MAAG,CAAC,CAAC;;MAEvC;MACAhB,QAAQ,CAACG,IAAI,EAAE;QAAEgB,OAAO,EAAE;MAAK,CAAC,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/BC,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC,EACD,CAACrB,QAAQ,EAAEG,IAAI,EAAED,OAAO,CAAC,CAAE;EAC7B,CAAC;EAED,oBACEP,OAAA;IAAA2B,QAAA,eACE3B,OAAA,CAACH,IAAI;MAAC+B,QAAQ,EAAEjB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAAC9B,EAAA,CA1CQD,UAAU;EAAA,QACAP,WAAW,EACXC,WAAW,EACRG,OAAO;AAAA;AAAAmC,EAAA,GAHpBhC,UAAU;AA4CnB,eAAeA,UAAU;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}