{"ast":null,"code":"import { decorateResponse, normalizeResponseInit } from './utils/HttpResponse/decorators.mjs';\nclass HttpResponse extends Response {\n  constructor(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    super(body, responseInit);\n    decorateResponse(this, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"text/plain\"` body.\n   * @example\n   * HttpResponse.text('hello world')\n   * HttpResponse.text('Error', { status: 500 })\n   */\n  static text(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    responseInit.headers.set(\"Content-Type\", \"text/plain\");\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"application/json\"` body.\n   * @example\n   * HttpResponse.json({ firstName: 'John' })\n   * HttpResponse.json({ error: 'Not Authorized' }, { status: 401 })\n   */\n  static json(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    responseInit.headers.set(\"Content-Type\", \"application/json\");\n    return new HttpResponse(JSON.stringify(body), responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"application/xml\"` body.\n   * @example\n   * HttpResponse.xml(`<user name=\"John\" />`)\n   * HttpResponse.xml(`<article id=\"abc-123\" />`, { status: 201 })\n   */\n  static xml(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    responseInit.headers.set(\"Content-Type\", \"text/xml\");\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with an `ArrayBuffer` body.\n   * @example\n   * const buffer = new ArrayBuffer(3)\n   * const view = new Uint8Array(buffer)\n   * view.set([1, 2, 3])\n   *\n   * HttpResponse.arrayBuffer(buffer)\n   */\n  static arrayBuffer(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    if (body) {\n      responseInit.headers.set(\"Content-Length\", body.byteLength.toString());\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `FormData` body.\n   * @example\n   * const data = new FormData()\n   * data.set('name', 'Alice')\n   *\n   * HttpResponse.formData(data)\n   */\n  static formData(body, init) {\n    return new HttpResponse(body, normalizeResponseInit(init));\n  }\n}\nexport { HttpResponse };","map":{"version":3,"names":["decorateResponse","normalizeResponseInit","HttpResponse","Response","constructor","body","init","responseInit","text","headers","set","json","JSON","stringify","xml","arrayBuffer","byteLength","toString","formData"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/.yarn/unplugged/msw-virtual-7370ac2e06/node_modules/msw/lib/core/HttpResponse.mjs"],"sourcesContent":["import {\n  decorateResponse,\n  normalizeResponseInit\n} from './utils/HttpResponse/decorators.mjs';\nclass HttpResponse extends Response {\n  constructor(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    super(body, responseInit);\n    decorateResponse(this, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"text/plain\"` body.\n   * @example\n   * HttpResponse.text('hello world')\n   * HttpResponse.text('Error', { status: 500 })\n   */\n  static text(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    responseInit.headers.set(\"Content-Type\", \"text/plain\");\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"application/json\"` body.\n   * @example\n   * HttpResponse.json({ firstName: 'John' })\n   * HttpResponse.json({ error: 'Not Authorized' }, { status: 401 })\n   */\n  static json(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    responseInit.headers.set(\"Content-Type\", \"application/json\");\n    return new HttpResponse(\n      JSON.stringify(body),\n      responseInit\n    );\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"application/xml\"` body.\n   * @example\n   * HttpResponse.xml(`<user name=\"John\" />`)\n   * HttpResponse.xml(`<article id=\"abc-123\" />`, { status: 201 })\n   */\n  static xml(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    responseInit.headers.set(\"Content-Type\", \"text/xml\");\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with an `ArrayBuffer` body.\n   * @example\n   * const buffer = new ArrayBuffer(3)\n   * const view = new Uint8Array(buffer)\n   * view.set([1, 2, 3])\n   *\n   * HttpResponse.arrayBuffer(buffer)\n   */\n  static arrayBuffer(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    if (body) {\n      responseInit.headers.set(\"Content-Length\", body.byteLength.toString());\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `FormData` body.\n   * @example\n   * const data = new FormData()\n   * data.set('name', 'Alice')\n   *\n   * HttpResponse.formData(data)\n   */\n  static formData(body, init) {\n    return new HttpResponse(body, normalizeResponseInit(init));\n  }\n}\nexport {\n  HttpResponse\n};\n"],"mappings":"AAAA,SACEA,gBAAgB,EAChBC,qBAAqB,QAChB,qCAAqC;AAC5C,MAAMC,YAAY,SAASC,QAAQ,CAAC;EAClCC,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAE;IACtB,MAAMC,YAAY,GAAGN,qBAAqB,CAACK,IAAI,CAAC;IAChD,KAAK,CAACD,IAAI,EAAEE,YAAY,CAAC;IACzBP,gBAAgB,CAAC,IAAI,EAAEO,YAAY,CAAC;EACtC;EACA;AACF;AACA;AACA;AACA;AACA;EACE,OAAOC,IAAIA,CAACH,IAAI,EAAEC,IAAI,EAAE;IACtB,MAAMC,YAAY,GAAGN,qBAAqB,CAACK,IAAI,CAAC;IAChDC,YAAY,CAACE,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC;IACtD,OAAO,IAAIR,YAAY,CAACG,IAAI,EAAEE,YAAY,CAAC;EAC7C;EACA;AACF;AACA;AACA;AACA;AACA;EACE,OAAOI,IAAIA,CAACN,IAAI,EAAEC,IAAI,EAAE;IACtB,MAAMC,YAAY,GAAGN,qBAAqB,CAACK,IAAI,CAAC;IAChDC,YAAY,CAACE,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAC5D,OAAO,IAAIR,YAAY,CACrBU,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,EACpBE,YACF,CAAC;EACH;EACA;AACF;AACA;AACA;AACA;AACA;EACE,OAAOO,GAAGA,CAACT,IAAI,EAAEC,IAAI,EAAE;IACrB,MAAMC,YAAY,GAAGN,qBAAqB,CAACK,IAAI,CAAC;IAChDC,YAAY,CAACE,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;IACpD,OAAO,IAAIR,YAAY,CAACG,IAAI,EAAEE,YAAY,CAAC;EAC7C;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOQ,WAAWA,CAACV,IAAI,EAAEC,IAAI,EAAE;IAC7B,MAAMC,YAAY,GAAGN,qBAAqB,CAACK,IAAI,CAAC;IAChD,IAAID,IAAI,EAAE;MACRE,YAAY,CAACE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEL,IAAI,CAACW,UAAU,CAACC,QAAQ,CAAC,CAAC,CAAC;IACxE;IACA,OAAO,IAAIf,YAAY,CAACG,IAAI,EAAEE,YAAY,CAAC;EAC7C;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOW,QAAQA,CAACb,IAAI,EAAEC,IAAI,EAAE;IAC1B,OAAO,IAAIJ,YAAY,CAACG,IAAI,EAAEJ,qBAAqB,CAACK,IAAI,CAAC,CAAC;EAC5D;AACF;AACA,SACEJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}