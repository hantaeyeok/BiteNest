{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isStrongPassword;\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar upperCaseRegex = /^[A-Z]$/;\nvar lowerCaseRegex = /^[a-z]$/;\nvar numberRegex = /^[0-9]$/;\nvar symbolRegex = /^[-#!$@£%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/\\\\ ]$/;\nvar defaultOptions = {\n  minLength: 8,\n  minLowercase: 1,\n  minUppercase: 1,\n  minNumbers: 1,\n  minSymbols: 1,\n  returnScore: false,\n  pointsPerUnique: 1,\n  pointsPerRepeat: 0.5,\n  pointsForContainingLower: 10,\n  pointsForContainingUpper: 10,\n  pointsForContainingNumber: 10,\n  pointsForContainingSymbol: 10\n};\n\n/* Counts number of occurrences of each char in a string\n * could be moved to util/ ?\n*/\nfunction countChars(str) {\n  var result = {};\n  Array.from(str).forEach(function (char) {\n    var curVal = result[char];\n    if (curVal) {\n      result[char] += 1;\n    } else {\n      result[char] = 1;\n    }\n  });\n  return result;\n}\n\n/* Return information about a password */\nfunction analyzePassword(password) {\n  var charMap = countChars(password);\n  var analysis = {\n    length: password.length,\n    uniqueChars: Object.keys(charMap).length,\n    uppercaseCount: 0,\n    lowercaseCount: 0,\n    numberCount: 0,\n    symbolCount: 0\n  };\n  Object.keys(charMap).forEach(function (char) {\n    /* istanbul ignore else */\n    if (upperCaseRegex.test(char)) {\n      analysis.uppercaseCount += charMap[char];\n    } else if (lowerCaseRegex.test(char)) {\n      analysis.lowercaseCount += charMap[char];\n    } else if (numberRegex.test(char)) {\n      analysis.numberCount += charMap[char];\n    } else if (symbolRegex.test(char)) {\n      analysis.symbolCount += charMap[char];\n    }\n  });\n  return analysis;\n}\nfunction scorePassword(analysis, scoringOptions) {\n  var points = 0;\n  points += analysis.uniqueChars * scoringOptions.pointsPerUnique;\n  points += (analysis.length - analysis.uniqueChars) * scoringOptions.pointsPerRepeat;\n  if (analysis.lowercaseCount > 0) {\n    points += scoringOptions.pointsForContainingLower;\n  }\n  if (analysis.uppercaseCount > 0) {\n    points += scoringOptions.pointsForContainingUpper;\n  }\n  if (analysis.numberCount > 0) {\n    points += scoringOptions.pointsForContainingNumber;\n  }\n  if (analysis.symbolCount > 0) {\n    points += scoringOptions.pointsForContainingSymbol;\n  }\n  return points;\n}\nfunction isStrongPassword(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  (0, _assertString.default)(str);\n  var analysis = analyzePassword(str);\n  options = (0, _merge.default)(options || {}, defaultOptions);\n  if (options.returnScore) {\n    return scorePassword(analysis, options);\n  }\n  return analysis.length >= options.minLength && analysis.lowercaseCount >= options.minLowercase && analysis.uppercaseCount >= options.minUppercase && analysis.numberCount >= options.minNumbers && analysis.symbolCount >= options.minSymbols;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isStrongPassword","_merge","_interopRequireDefault","require","_assertString","obj","__esModule","upperCaseRegex","lowerCaseRegex","numberRegex","symbolRegex","defaultOptions","minLength","minLowercase","minUppercase","minNumbers","minSymbols","returnScore","pointsPerUnique","pointsPerRepeat","pointsForContainingLower","pointsForContainingUpper","pointsForContainingNumber","pointsForContainingSymbol","countChars","str","result","Array","from","forEach","char","curVal","analyzePassword","password","charMap","analysis","length","uniqueChars","keys","uppercaseCount","lowercaseCount","numberCount","symbolCount","test","scorePassword","scoringOptions","points","options","arguments","undefined","module"],"sources":["/Users/leeyangie/.yarn/berry/cache/validator-npm-13.12.0-6c8a423cbf-10c0.zip/node_modules/validator/lib/isStrongPassword.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isStrongPassword;\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar upperCaseRegex = /^[A-Z]$/;\nvar lowerCaseRegex = /^[a-z]$/;\nvar numberRegex = /^[0-9]$/;\nvar symbolRegex = /^[-#!$@£%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/\\\\ ]$/;\nvar defaultOptions = {\n  minLength: 8,\n  minLowercase: 1,\n  minUppercase: 1,\n  minNumbers: 1,\n  minSymbols: 1,\n  returnScore: false,\n  pointsPerUnique: 1,\n  pointsPerRepeat: 0.5,\n  pointsForContainingLower: 10,\n  pointsForContainingUpper: 10,\n  pointsForContainingNumber: 10,\n  pointsForContainingSymbol: 10\n};\n\n/* Counts number of occurrences of each char in a string\n * could be moved to util/ ?\n*/\nfunction countChars(str) {\n  var result = {};\n  Array.from(str).forEach(function (char) {\n    var curVal = result[char];\n    if (curVal) {\n      result[char] += 1;\n    } else {\n      result[char] = 1;\n    }\n  });\n  return result;\n}\n\n/* Return information about a password */\nfunction analyzePassword(password) {\n  var charMap = countChars(password);\n  var analysis = {\n    length: password.length,\n    uniqueChars: Object.keys(charMap).length,\n    uppercaseCount: 0,\n    lowercaseCount: 0,\n    numberCount: 0,\n    symbolCount: 0\n  };\n  Object.keys(charMap).forEach(function (char) {\n    /* istanbul ignore else */\n    if (upperCaseRegex.test(char)) {\n      analysis.uppercaseCount += charMap[char];\n    } else if (lowerCaseRegex.test(char)) {\n      analysis.lowercaseCount += charMap[char];\n    } else if (numberRegex.test(char)) {\n      analysis.numberCount += charMap[char];\n    } else if (symbolRegex.test(char)) {\n      analysis.symbolCount += charMap[char];\n    }\n  });\n  return analysis;\n}\nfunction scorePassword(analysis, scoringOptions) {\n  var points = 0;\n  points += analysis.uniqueChars * scoringOptions.pointsPerUnique;\n  points += (analysis.length - analysis.uniqueChars) * scoringOptions.pointsPerRepeat;\n  if (analysis.lowercaseCount > 0) {\n    points += scoringOptions.pointsForContainingLower;\n  }\n  if (analysis.uppercaseCount > 0) {\n    points += scoringOptions.pointsForContainingUpper;\n  }\n  if (analysis.numberCount > 0) {\n    points += scoringOptions.pointsForContainingNumber;\n  }\n  if (analysis.symbolCount > 0) {\n    points += scoringOptions.pointsForContainingSymbol;\n  }\n  return points;\n}\nfunction isStrongPassword(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  (0, _assertString.default)(str);\n  var analysis = analyzePassword(str);\n  options = (0, _merge.default)(options || {}, defaultOptions);\n  if (options.returnScore) {\n    return scorePassword(analysis, options);\n  }\n  return analysis.length >= options.minLength && analysis.lowercaseCount >= options.minLowercase && analysis.uppercaseCount >= options.minUppercase && analysis.numberCount >= options.minNumbers && analysis.symbolCount >= options.minSymbols;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}