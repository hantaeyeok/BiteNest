{"ast":null,"code":"var _jsxFileName = \"/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/components/auth/ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport useUser from '@hooks/auth/useUser'; // 유저 정보를 가져오는 훅\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProtectedRoute() {\n  _s();\n  const {\n    user\n  } = useUser(); // 로딩 상태 추가\n  console.log('protectedeUser', user);\n  const location = useLocation();\n  if (!user) {\n    // 사용자가 로그인되지 않았다면 로그인 페이지로 리다이렉트\n    alert('로그인이 필요한 페이지입니다. 로그인 창으로 이동합니다');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/signin\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 로그인된 경우, 자식 컴포넌트를 렌더링\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n_s(ProtectedRoute, \"4H6ulBV5i8yTSODwZaHY+RTQ8QE=\", false, function () {\n  return [useUser, useLocation];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","Outlet","useLocation","useUser","jsxDEV","_jsxDEV","ProtectedRoute","_s","user","console","log","location","alert","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/components/auth/ProtectedRoute.tsx"],"sourcesContent":["import { Navigate, Outlet, useLocation } from 'react-router-dom'\nimport useUser from '@hooks/auth/useUser' // 유저 정보를 가져오는 훅\n\nexport function ProtectedRoute() {\n  const { user } = useUser() // 로딩 상태 추가\n  console.log('protectedeUser', user)\n  const location = useLocation()\n\n  if (!user) {\n    // 사용자가 로그인되지 않았다면 로그인 페이지로 리다이렉트\n    alert('로그인이 필요한 페이지입니다. 로그인 창으로 이동합니다')\n    return <Navigate to=\"/signin\" state={{ from: location }} replace />\n  }\n\n  // 로그인된 경우, 자식 컴포넌트를 렌더링\n  return <Outlet />\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,OAAO,MAAM,qBAAqB,EAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAK,CAAC,GAAGL,OAAO,CAAC,CAAC,EAAC;EAC3BM,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;EACnC,MAAMG,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,IAAI,CAACM,IAAI,EAAE;IACT;IACAI,KAAK,CAAC,gCAAgC,CAAC;IACvC,oBAAOP,OAAA,CAACL,QAAQ;MAACa,EAAE,EAAC,SAAS;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEJ;MAAS,CAAE;MAACK,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrE;;EAEA;EACA,oBAAOf,OAAA,CAACJ,MAAM;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB;AAACb,EAAA,CAbeD,cAAc;EAAA,QACXH,OAAO,EAEPD,WAAW;AAAA;AAAAmB,EAAA,GAHdf,cAAc;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}