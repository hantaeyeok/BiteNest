{"ast":null,"code":"var _jsxFileName = \"/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/components/signup/Form.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useMemo, useState } from 'react';\nimport Button from '@components/shared/Button';\nimport TextField from '@components/shared/TextField';\nimport validator from 'validator';\nimport Spacing from '@/shared/Spacing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction validate(formValues) {\n  let errors = {};\n  if (validator.isEmail(formValues.email) === false) {\n    errors.email = '이메일형식을 확인해주세요';\n  }\n  if (formValues.password.length < 8) {\n    errors.password = '비밀번호를 8자 이상 입력해주세요';\n  }\n  if (formValues.rePassword.length < 8) {\n    errors.rePassword = '비밀번호를 8자 이상 입력해주세요';\n  } else if (validator.equals(formValues.rePassword, formValues.password) === false) {\n    errors.rePassword = '비밀번호를 확인해주세요';\n  }\n  if (formValues.name.length < 2) {\n    errors.name = '이름은 2글자 이상 입력해주세요';\n  }\n  if (formValues.nickName.length < 2) {\n    errors.name = '닉네임은 2글자 이상 입력해주세요';\n  }\n  return errors;\n}\nfunction Form() {\n  _s();\n  const [formValues, setFormValues] = useState({\n    email: '',\n    password: '',\n    rePassword: '',\n    name: '',\n    nickName: ''\n  });\n  const errors = useMemo(() => validate(formValues), [formValues]);\n  console.log('errors', errors);\n  const handleFormValues = useCallback(e => {\n    setFormValues(prevFormValues => ({\n      ...prevFormValues,\n      [e.target.name]: e.target.value\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sm:container sm:mx-auto py-6 px-6 sm:px-36\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-2xl my-6\",\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\uC774\\uBA54\\uC77C\",\n      name: \"email\",\n      placeholder: \"prumpy11@naver.com\",\n      value: formValues.email,\n      onChange: handleFormValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacing, {\n      size: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n      name: \"password\",\n      type: \"password\",\n      value: formValues.password,\n      onChange: handleFormValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacing, {\n      size: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\\uD655\\uC778\",\n      name: \"rePassword\",\n      type: \"password\",\n      value: formValues.rePassword,\n      onChange: handleFormValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacing, {\n      size: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\uC774\\uB984\",\n      name: \"name\",\n      placeholder: \"\\uD64D\\uAE38\\uB3D9\",\n      value: formValues.name,\n      onChange: handleFormValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacing, {\n      size: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\uB2C9\\uB124\\uC784\",\n      name: \"nickName\",\n      placeholder: \"\\uCEAC\\uB77C\\uBA5C\",\n      value: formValues.nickName,\n      onChange: handleFormValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacing, {\n      size: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n      disabled: true,\n      color: \"bg-brown-100\",\n      size: \"full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"Wajfv8Fpg22brtgLEJWgGnqUd+g=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useCallback","useMemo","useState","Button","TextField","validator","Spacing","jsxDEV","_jsxDEV","validate","formValues","errors","isEmail","email","password","length","rePassword","equals","name","nickName","Form","_s","setFormValues","console","log","handleFormValues","e","prevFormValues","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","placeholder","onChange","size","type","disabled","color","_c","$RefreshReg$"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/components/signup/Form.tsx"],"sourcesContent":["import { ChangeEvent, useCallback, useMemo, useState } from 'react'\nimport Button from '@components/shared/Button'\nimport TextField from '@components/shared/TextField'\n\nimport { FormValues } from '@models/signup'\nimport validator from 'validator'\nimport Spacing from '@/shared/Spacing'\n\nfunction validate(formValues: FormValues) {\n  let errors: Partial<FormValues> = {}\n\n  if (validator.isEmail(formValues.email) === false) {\n    errors.email = '이메일형식을 확인해주세요'\n  }\n\n  if (formValues.password.length < 8) {\n    errors.password = '비밀번호를 8자 이상 입력해주세요'\n  }\n\n  if (formValues.rePassword.length < 8) {\n    errors.rePassword = '비밀번호를 8자 이상 입력해주세요'\n  } else if (\n    validator.equals(formValues.rePassword, formValues.password) === false\n  ) {\n    errors.rePassword = '비밀번호를 확인해주세요'\n  }\n\n  if (formValues.name.length < 2) {\n    errors.name = '이름은 2글자 이상 입력해주세요'\n  }\n  if (formValues.nickName.length < 2) {\n    errors.name = '닉네임은 2글자 이상 입력해주세요'\n  }\n  return errors\n}\n\nfunction Form() {\n  const [formValues, setFormValues] = useState<FormValues>({\n    email: '',\n    password: '',\n    rePassword: '',\n    name: '',\n    nickName: '',\n  })\n\n  const errors = useMemo(() => validate(formValues), [formValues])\n\n  console.log('errors', errors)\n\n  const handleFormValues = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFormValues((prevFormValues) => ({\n      ...prevFormValues,\n      [e.target.name]: e.target.value,\n    }))\n  }, [])\n\n  return (\n    <div className=\"sm:container sm:mx-auto py-6 px-6 sm:px-36\">\n      <p className=\"text-2xl my-6\">회원가입</p>\n      <TextField\n        label=\"이메일\"\n        name=\"email\"\n        placeholder=\"prumpy11@naver.com\"\n        value={formValues.email}\n        onChange={handleFormValues}\n      />\n      <Spacing size={6} />\n      <TextField\n        label=\"패스워드\"\n        name=\"password\"\n        type=\"password\"\n        value={formValues.password}\n        onChange={handleFormValues}\n      />\n      <Spacing size={6} />\n      <TextField\n        label=\"패스워드확인\"\n        name=\"rePassword\"\n        type=\"password\"\n        value={formValues.rePassword}\n        onChange={handleFormValues}\n      />\n      <Spacing size={6} />\n      <TextField\n        label=\"이름\"\n        name=\"name\"\n        placeholder=\"홍길동\"\n        value={formValues.name}\n        onChange={handleFormValues}\n      />\n      <Spacing size={6} />\n      <TextField\n        label=\"닉네임\"\n        name=\"nickName\"\n        placeholder=\"캬라멜\"\n        value={formValues.nickName}\n        onChange={handleFormValues}\n      />\n      <Spacing size={6} />\n      <Button\n        label=\"회원가입\"\n        disabled={true}\n        color=\"bg-brown-100\"\n        size=\"full\"\n      ></Button>\n    </div>\n  )\n}\n\nexport default Form\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}