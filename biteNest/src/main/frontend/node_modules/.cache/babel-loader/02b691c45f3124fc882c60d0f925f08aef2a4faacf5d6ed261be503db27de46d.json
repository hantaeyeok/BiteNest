{"ast":null,"code":"function getPublicUrlFromRequest(request) {\n  if (typeof location === \"undefined\") {\n    return request.url;\n  }\n  const url = new URL(request.url);\n  return url.origin === location.origin ? url.pathname : url.origin + url.pathname;\n}\nexport { getPublicUrlFromRequest };","map":{"version":3,"names":["getPublicUrlFromRequest","request","location","url","URL","origin","pathname"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/.yarn/unplugged/msw-virtual-c17a34f746/node_modules/msw/src/core/utils/request/getPublicUrlFromRequest.ts"],"sourcesContent":["/**\n * Returns a relative URL if the given request URL is relative to the current origin.\n * Otherwise returns an absolute URL.\n */\nexport function getPublicUrlFromRequest(request: Request): string {\n  if (typeof location === 'undefined') {\n    return request.url\n  }\n\n  const url = new URL(request.url)\n\n  return url.origin === location.origin\n    ? url.pathname\n    : url.origin + url.pathname\n}\n"],"mappings":"AAIO,SAASA,wBAAwBC,OAAA,EAA0B;EAChE,IAAI,OAAOC,QAAA,KAAa,aAAa;IACnC,OAAOD,OAAA,CAAQE,GAAA;EACjB;EAEA,MAAMA,GAAA,GAAM,IAAIC,GAAA,CAAIH,OAAA,CAAQE,GAAG;EAE/B,OAAOA,GAAA,CAAIE,MAAA,KAAWH,QAAA,CAASG,MAAA,GAC3BF,GAAA,CAAIG,QAAA,GACJH,GAAA,CAAIE,MAAA,GAASF,GAAA,CAAIG,QAAA;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}