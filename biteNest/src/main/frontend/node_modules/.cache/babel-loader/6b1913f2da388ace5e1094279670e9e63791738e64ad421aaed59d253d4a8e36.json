{"ast":null,"code":"var _jsxFileName = \"/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/components/recipe/FetchCategory.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeCategorySelect() {\n  _s();\n  const [cuisineCategories, setCuisineCategories] = useState([]);\n  const [mealCategories, setMealCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // 카테고리 데이터를 서버에서 가져오는 함수\n  const fetchCategories = async () => {\n    try {\n      const cuisineResponse = await fetch('/api/cuisine-categories'); // 요리 종류 API\n      const mealResponse = await fetch('/api/meal-categories'); // 식사 종류 API\n\n      if (!cuisineResponse.ok || !mealResponse.ok) {\n        throw new Error('데이터를 가져오는 데 오류가 발생했습니다.');\n      }\n      const cuisineData = await cuisineResponse.json();\n      const mealData = await mealResponse.json();\n      setCuisineCategories(cuisineData);\n      setMealCategories(mealData);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cuisine-type\",\n        className: \"block text-lg font-bold text-brown-300\",\n        children: \"\\uC694\\uB9AC \\uC885\\uB958 \\uC120\\uD0DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"cuisine-type\",\n        className: \"mt-1 p-2 border border-brown-100 rounded-md focus:outline-none focus:border-brown-300 focus:ring-brown-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\uC694\\uB9AC \\uC885\\uB958\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), cuisineCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.name,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"meal-type\",\n        className: \"block text-lg font-bold text-brown-300\",\n        children: \"\\uC2DD\\uC0AC \\uC885\\uB958 \\uC120\\uD0DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"meal-type\",\n        className: \"mt-1 p-2 border border-brown-100 rounded-md focus:outline-none focus:border-brown-300 focus:ring-brown-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\uC2DD\\uC0AC \\uC885\\uB958\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), mealCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.name,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeCategorySelect, \"JtiyS8eduFN480zN9hfx4w9WMtc=\");\n_c = RecipeCategorySelect;\nexport default RecipeCategorySelect;\nvar _c;\n$RefreshReg$(_c, \"RecipeCategorySelect\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","RecipeCategorySelect","_s","cuisineCategories","setCuisineCategories","mealCategories","setMealCategories","loading","setLoading","fetchCategories","cuisineResponse","fetch","mealResponse","ok","Error","cuisineData","json","mealData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","value","map","category","name","_c","$RefreshReg$"],"sources":["/Users/leeyangie/Documents/GitHub/BiteNest/biteNest/src/main/frontend/src/components/recipe/FetchCategory.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\n\ninterface Category {\n  id: number\n  name: string\n}\n\nfunction RecipeCategorySelect() {\n  const [cuisineCategories, setCuisineCategories] = useState<Category[]>([])\n  const [mealCategories, setMealCategories] = useState<Category[]>([])\n  const [loading, setLoading] = useState(true)\n\n  // 카테고리 데이터를 서버에서 가져오는 함수\n  const fetchCategories = async () => {\n    try {\n      const cuisineResponse = await fetch('/api/cuisine-categories') // 요리 종류 API\n      const mealResponse = await fetch('/api/meal-categories') // 식사 종류 API\n\n      if (!cuisineResponse.ok || !mealResponse.ok) {\n        throw new Error('데이터를 가져오는 데 오류가 발생했습니다.')\n      }\n\n      const cuisineData = await cuisineResponse.json()\n      const mealData = await mealResponse.json()\n\n      setCuisineCategories(cuisineData)\n      setMealCategories(mealData)\n    } catch (error) {\n      console.error('Error fetching categories:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n  useEffect(() => {\n    fetchCategories()\n  }, [])\n\n  if (loading) {\n    return <p>로딩 중...</p>\n  }\n\n  return (\n    <div className=\"flex flex-col space-y-4\">\n      <div>\n        <label\n          htmlFor=\"cuisine-type\"\n          className=\"block text-lg font-bold text-brown-300\"\n        >\n          요리 종류 선택\n        </label>\n        <select\n          id=\"cuisine-type\"\n          className=\"mt-1 p-2 border border-brown-100 rounded-md focus:outline-none focus:border-brown-300 focus:ring-brown-300\"\n        >\n          <option value=\"\">요리 종류를 선택하세요</option>\n          {cuisineCategories.map((category) => (\n            <option key={category.id} value={category.name}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"meal-type\"\n          className=\"block text-lg font-bold text-brown-300\"\n        >\n          식사 종류 선택\n        </label>\n        <select\n          id=\"meal-type\"\n          className=\"mt-1 p-2 border border-brown-100 rounded-md focus:outline-none focus:border-brown-300 focus:ring-brown-300\"\n        >\n          <option value=\"\">식사 종류를 선택하세요</option>\n          {mealCategories.map((category) => (\n            <option key={category.id} value={category.name}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default RecipeCategorySelect\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}